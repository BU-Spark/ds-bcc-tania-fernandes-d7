<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='District7 (2)' inline='true' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='District7' name='textscan.12h7foz0yyqtio11053641k0f2mo'>
            <connection class='textscan' directory='/Users/harshshah/Desktop/District_7/Poverty' filename='Poverty_District7.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Poverty_District7' name='textscan.1s2r4oz1rj5kug1gvf55t1egfmqr'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/harshshah/Desktop/District_7/Poverty/Poverty_District7.csv' dataRefreshTime='' directory='/Users/harshshah/Desktop/District_7/Poverty' filename='/var/folders/nz/yglwkh0d003_mjjfnfrm07y40000gn/T/tableau-temp/08w3kga0qsqodw11q55g71rbglti/Poverty_District7.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Poverty_Boston' name='textscan.0lnyctn1b96ca21eh9aah1s2ajdy'>
            <connection class='textscan' directory='/Users/harshshah/Desktop/District_7/Poverty' filename='Poverty_Boston.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.12h7foz0yyqtio11053641k0f2mo' name='Poverty_Boston.csv' table='[Poverty_Boston#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='label' ordinal='0' />
              <column datatype='real' name='total_estimate' ordinal='1' />
              <column datatype='string' name='total_margin_error' ordinal='2' />
              <column datatype='real' name='below_poverty_estimate' ordinal='3' />
              <column datatype='string' name='below_poverty_margin_error' ordinal='4' />
              <column datatype='real' name='percent_below_poverty_estimate' ordinal='5' />
              <column datatype='string' name='percent_below_poverty_margin_error' ordinal='6' />
              <column datatype='integer' name='year' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.0lnyctn1b96ca21eh9aah1s2ajdy' name='Poverty_District7.csv' table='[/Users/harshshah/Desktop/District_7/Poverty/Poverty_District7#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='string' name='label' ordinal='1' />
              <column datatype='real' name='total_estimate' ordinal='2' />
              <column datatype='real' name='below_poverty_estimate' ordinal='3' />
              <column datatype='real' name='percent_below_poverty_estimate' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[below_poverty_estimate (Poverty_Boston.csv)]' value='[Poverty_Boston.csv].[below_poverty_estimate]' />
          <map key='[below_poverty_estimate]' value='[Poverty_District7.csv].[below_poverty_estimate]' />
          <map key='[below_poverty_margin_error]' value='[Poverty_Boston.csv].[below_poverty_margin_error]' />
          <map key='[label (Poverty_Boston.csv)]' value='[Poverty_Boston.csv].[label]' />
          <map key='[label]' value='[Poverty_District7.csv].[label]' />
          <map key='[percent_below_poverty_estimate (Poverty_Boston.csv)]' value='[Poverty_Boston.csv].[percent_below_poverty_estimate]' />
          <map key='[percent_below_poverty_estimate]' value='[Poverty_District7.csv].[percent_below_poverty_estimate]' />
          <map key='[percent_below_poverty_margin_error]' value='[Poverty_Boston.csv].[percent_below_poverty_margin_error]' />
          <map key='[total_estimate (Poverty_Boston.csv)]' value='[Poverty_Boston.csv].[total_estimate]' />
          <map key='[total_estimate]' value='[Poverty_District7.csv].[total_estimate]' />
          <map key='[total_margin_error]' value='[Poverty_Boston.csv].[total_margin_error]' />
          <map key='[year (Poverty_Boston.csv)]' value='[Poverty_Boston.csv].[year]' />
          <map key='[year]' value='[Poverty_District7.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Poverty_District7.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label (Poverty_Boston.csv)]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>label</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_estimate (Poverty_Boston.csv)]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>total_estimate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_margin_error</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_margin_error]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>total_margin_error</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>below_poverty_estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[below_poverty_estimate (Poverty_Boston.csv)]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>below_poverty_estimate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>below_poverty_margin_error</remote-name>
            <remote-type>129</remote-type>
            <local-name>[below_poverty_margin_error]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>below_poverty_margin_error</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_below_poverty_estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_below_poverty_estimate (Poverty_Boston.csv)]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>percent_below_poverty_estimate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_below_poverty_margin_error</remote-name>
            <remote-type>129</remote-type>
            <local-name>[percent_below_poverty_margin_error]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>percent_below_poverty_margin_error</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (Poverty_Boston.csv)]</local-name>
            <parent-name>[Poverty_Boston.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Poverty_District7.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label]</local-name>
            <parent-name>[Poverty_District7.csv]</parent-name>
            <remote-alias>label</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_estimate]</local-name>
            <parent-name>[Poverty_District7.csv]</parent-name>
            <remote-alias>total_estimate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>below_poverty_estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[below_poverty_estimate]</local-name>
            <parent-name>[Poverty_District7.csv]</parent-name>
            <remote-alias>below_poverty_estimate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_below_poverty_estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_below_poverty_estimate]</local-name>
            <parent-name>[Poverty_District7.csv]</parent-name>
            <remote-alias>percent_below_poverty_estimate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
      </column>
      <column caption='Calculation1' datatype='real' hidden='true' name='[Calculation_3667548595592359942]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([percent_below_poverty_estimate],1)' />
      </column>
      <column caption='Calculation2' datatype='real' hidden='true' name='[Calculation_3667548595592974344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([percent_below_poverty_estimate] / 100, 1)' />
      </column>
      <column caption='Calculation3' datatype='real' datatype-customized='true' hidden='true' name='[Calculation_3667548595594121226]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='FLOAT(STR(ROUND([percent_below_poverty_estimate], 1)) + &apos;%&apos;)' />
      </column>
      <column caption='Calculation4' datatype='real' hidden='true' name='[Calculation_923941630563307524]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([percent_below_poverty_estimate (Poverty_Boston.csv)])' />
      </column>
      <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[label]' new-bin='true'>
          <bin default-name='false' value='&quot;American Indian and Alaskan native&quot;'>
            <value>&quot;American Indian and Alaska Native&quot;</value>
            <value>&quot;American Indian and Alaska Native alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Asian&quot;'>
            <value>&quot;Asian&quot;</value>
            <value>&quot;Asian alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Black or African American&quot;'>
            <value>&quot;Black or African American&quot;</value>
            <value>&quot;Black or African American alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hispanic or Latino origin&quot;'>
            <value>&quot;Hispanic or Latino origin (of any race)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Native Hawaiian and Other Pacific Islander&quot;'>
            <value>&quot;Native Hawaiian and Other Pacific Islander&quot;</value>
            <value>&quot;Native Hawaiian and Other Pacific Islander alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Some other race&quot;'>
            <value>&quot;Some other race&quot;</value>
            <value>&quot;Some other race alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;White&quot;'>
            <value>&quot;White&quot;</value>
            <value>&quot;White alone&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Poverty_Boston.csv' datatype='table' name='[__tableau_internal_object_id__].[Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7]' role='measure' type='quantitative' />
      <column caption='Poverty_District7.csv' datatype='table' name='[__tableau_internal_object_id__].[Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='below poverty estimate' datatype='real' name='[below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
      <column caption='Below Poverty Estimate' datatype='real' name='[below_poverty_estimate]' role='measure' type='quantitative' />
      <column caption='Below Poverty Margin Error' datatype='string' hidden='true' name='[below_poverty_margin_error]' role='dimension' type='nominal' />
      <column datatype='string' name='[label  (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[label (Poverty_Boston.csv)]' new-bin='true'>
          <bin default-name='false' value='&quot;American Indian and Alaska Native&quot;'>
            <value>&quot;American Indian and Alaska Native&quot;</value>
            <value>&quot;American Indian and Alaska Native alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Asian&quot;'>
            <value>&quot;Asian&quot;</value>
            <value>&quot;Asian alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Black or African American&quot;'>
            <value>&quot;Black or African American&quot;</value>
            <value>&quot;Black or African American alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hispanic or Latino origin&quot;'>
            <value>&quot;Hispanic or Latino origin (of any race)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Native Hawaiian and Other Pacific Islander&quot;'>
            <value>&quot;Native Hawaiian and Other Pacific Islander&quot;</value>
            <value>&quot;Native Hawaiian and Other Pacific Islander alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Some other race&quot;'>
            <value>&quot;Some other race&quot;</value>
            <value>&quot;Some other race alone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;White&quot;'>
            <value>&quot;White&quot;</value>
            <value>&quot;White alone&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
      <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
      <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
      <column caption='Percent Below Poverty Margin Error' datatype='string' hidden='true' name='[percent_below_poverty_margin_error]' role='dimension' type='nominal' />
      <column caption='total estimate' datatype='real' name='[total_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
      <column caption='Total Estimate' datatype='real' name='[total_estimate]' role='measure' type='quantitative' />
      <column caption='Total Margin Error' datatype='string' hidden='true' name='[total_margin_error]' role='dimension' type='nominal' />
      <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1624603217542516736]' derivation='None' name='[none:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
      <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Label,Percent Below Poverty Estimate,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:label:nk]' />
          <groupfilter function='level-members' level='[none:percent_below_poverty_estimate:qk]' />
          <groupfilter function='level-members' level='[none:year:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (label ,percent below poverty,year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:label (Poverty_Boston.csv):nk]' />
          <groupfilter function='level-members' level='[none:Calculation_1624603217542516736:qk]' />
          <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Label,Percent Below Poverty Estimate,Year)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:label:nk]' />
          <groupfilter function='level-members' level='[none:percent_below_poverty_estimate:qk]' />
          <groupfilter function='level-members' level='[none:year:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Label (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;35 to 44 years&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Population 16 years and over&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;White alone, not Hispanic or Latino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;300 percent of poverty level&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hispanic or Latino origin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Two or more races&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Under 18 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;16 to 17 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;All Individuals below:&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Indian and Alaskan native&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Native Hawaiian and Other Pacific Islander&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Population for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;50 percent of poverty level&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Black or African American alone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poverty status for individuals&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Worked part-time or part-year in the past 12 months&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;35 to 64 years&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asian alone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Population 25 years and over&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WORK EXPERIENCE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;18 to 24 years&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALL INDIVIDUALS WITH INCOME BELOW THE FOLLOWING POVERTY RATIOS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Native Hawaiian and Other Pacific Islander alone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UNRELATED INDIVIDUALS FOR WHOM POVERTY STATUS IS DETERMINED&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;150 percent of poverty level&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;185 percent of poverty level&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;400 percent of poverty level&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 to 17 years&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Less than high school graduate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Under 5 years&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;75 years and over&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Employed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SEX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18 to 34 years&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American Indian and Alaska Native&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;One race&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;55 to 64 years&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Civilian labor force 16 years and over&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RACE AND HISPANIC OR LATINO ORIGIN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;60 years and over&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Did not work&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Related children of householder under 18 years&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;125 percent of poverty level&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EMPLOYMENT STATUS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Some college, associate&apos;s degree&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;200 percent of poverty level&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High school graduate (includes equivalency)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Some other race alone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unrelated individuals for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;65 years and over&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bachelor&apos;s degree or higher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Some other race&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Worked full-time, year-round in the past 12 months&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25 to 34 years&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American Indian and Alaska Native alone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PERCENT IMPUTED&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;White alone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18 to 64 years&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;500 percent of poverty level&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;65 to 74 years&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EDUCATIONAL ATTAINMENT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Related children under 18 years&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;45 to 54 years&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Black or African American&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Population in housing units for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worked less than full-time, year-round in the past 12 months&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;15 years&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mean income deficit for unrelated individuals (dollars)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Unemployed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:label:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Did not work&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Worked part-time or part-year in the past 12 months&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Worked less than full-time, year-round in the past 12 months&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Worked full-time, year-round in the past 12 months&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:label:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;Employed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;35 to 64 years&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Population 25 years and over&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;300 percent of poverty level&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hispanic or Latino origin (of any race)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Population for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;18 to 64 years&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;Worked full-time, year-round in the past 12 months&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18 to 24 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;All Individuals below:&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Native Hawaiian and Other Pacific Islander alone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#61a956'>
              <bucket>&quot;Bachelor&apos;s degree or higher&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Some college, associate&apos;s degree&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;60 years and over&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Related children of householder under 18 years&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;45 to 54 years&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asian alone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Under 5 years&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;18 to 34 years&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALL INDIVIDUALS WITH INCOME BELOW THE FOLLOWING POVERTY RATIOS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;One race&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;White alone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;185 percent of poverty level&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Some other race&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;400 percent of poverty level&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 to 17 years&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Two or more races&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;125 percent of poverty level&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SEX&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Did not work&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Under 18 years&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Unemployed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25 to 34 years&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American Indian and Alaska Native&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PERCENT IMPUTED&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;White alone, not Hispanic or Latino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;65 to 74 years&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Civilian labor force 16 years and over&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Black or African American&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Related children under 18 years&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;150 percent of poverty level&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EMPLOYMENT STATUS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;200 percent of poverty level&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Some other race alone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;50 percent of poverty level&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Black or African American alone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poverty status for individuals&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;65 years and over&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;Worked less than full-time, year-round in the past 12 months&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Worked part-time or part-year in the past 12 months&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;35 to 44 years&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American Indian and Alaska Native alone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Population 16 years and over&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WORK EXPERIENCE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;15 years&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;500 percent of poverty level&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mean income deficit for unrelated individuals (dollars)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unrelated individuals for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;Less than high school graduate&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;High school graduate (includes equivalency)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;75 years and over&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EDUCATIONAL ATTAINMENT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;55 to 64 years&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Population in housing units for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RACE AND HISPANIC OR LATINO ORIGIN&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;16 to 17 years&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Native Hawaiian and Other Pacific Islander&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UNRELATED INDIVIDUALS FOR WHOM POVERTY STATUS IS DETERMINED&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:label (Poverty_Boston.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;35 to 44 years&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American Indian and Alaska Native alone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PERCENT IMPUTED&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;White alone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;200 percent of poverty level&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Some other race alone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18 to 24 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bachelor&apos;s degree or higher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Employed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mean income deficit for unrelated individuals (dollars)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Worked full-time, year-round in the past 12 months&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Some college, associate&apos;s degree&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;55 to 64 years&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Black or African American&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Population in housing units for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;35 to 64 years&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Population 16 years and over&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;White alone, not Hispanic or Latino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;18 to 34 years&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;All Individuals below:&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Native Hawaiian and Other Pacific Islander&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UNRELATED INDIVIDUALS FOR WHOM POVERTY STATUS IS DETERMINED&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;150 percent of poverty level&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EMPLOYMENT STATUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;300 percent of poverty level&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 to 17 years&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hispanic or Latino origin (of any race)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Two or more races&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Unemployed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;75 years and over&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EDUCATIONAL ATTAINMENT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Related children under 18 years&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18 to 64 years&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALL INDIVIDUALS WITH INCOME BELOW THE FOLLOWING POVERTY RATIOS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Native Hawaiian and Other Pacific Islander alone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Unrelated individuals for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;60 years and over&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Black or African American alone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poverty status for individuals&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Did not work&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;65 to 74 years&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Civilian labor force 16 years and over&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RACE AND HISPANIC OR LATINO ORIGIN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;125 percent of poverty level&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SEX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;185 percent of poverty level&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Some other race&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;45 to 54 years&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asian alone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Less than high school graduate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Population 25 years and over&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WORK EXPERIENCE&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Worked part-time or part-year in the past 12 months&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25 to 34 years&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American Indian and Alaska Native&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;One race&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;15 years&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;400 percent of poverty level&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High school graduate (includes equivalency)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Under 5 years&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Worked less than full-time, year-round in the past 12 months&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;65 years and over&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Related children of householder under 18 years&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;50 percent of poverty level&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Population for whom poverty status is determined&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;16 to 17 years&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;500 percent of poverty level&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Under 18 years&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='label' />
        <field-sort-custom-order field='total_estimate' />
        <field-sort-custom-order field='below_poverty_estimate' />
        <field-sort-custom-order field='percent_below_poverty_estimate' />
        <field-sort-custom-order field='Calculation_3667548595594121226' />
        <field-sort-custom-order field='Calculation_3667548595592974344' />
        <field-sort-custom-order field='Calculation_3667548595592359942' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Poverty_Boston.csv' id='Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7'>
            <properties context=''>
              <relation connection='textscan.12h7foz0yyqtio11053641k0f2mo' name='Poverty_Boston.csv' table='[Poverty_Boston#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='label' ordinal='0' />
                  <column datatype='real' name='total_estimate' ordinal='1' />
                  <column datatype='string' name='total_margin_error' ordinal='2' />
                  <column datatype='real' name='below_poverty_estimate' ordinal='3' />
                  <column datatype='string' name='below_poverty_margin_error' ordinal='4' />
                  <column datatype='real' name='percent_below_poverty_estimate' ordinal='5' />
                  <column datatype='string' name='percent_below_poverty_margin_error' ordinal='6' />
                  <column datatype='integer' name='year' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Poverty_District7.csv' id='Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C'>
            <properties context=''>
              <relation connection='textscan.0lnyctn1b96ca21eh9aah1s2ajdy' name='Poverty_District7.csv' table='[/Users/harshshah/Desktop/District_7/Poverty/Poverty_District7#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='string' name='label' ordinal='1' />
                  <column datatype='real' name='total_estimate' ordinal='2' />
                  <column datatype='real' name='below_poverty_estimate' ordinal='3' />
                  <column datatype='real' name='percent_below_poverty_estimate' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[total_estimate (Poverty_Boston.csv)]' />
              <expression op='[total_estimate]' />
            </expression>
            <first-end-point object-id='Poverty_Boston.csv_827BB4CFCB9646A590AF654A5BF900E7' />
            <second-end-point object-id='Poverty_District7.csv_24056A86498949A3B3EBF95FDD01723C' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action2_D756727E3E074CDF99BE4DFC154A39DE]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Gender' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Percent Below Poverty Estimate' />
        <param name='target' value='Gender' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Age groups'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12' underline='true'>Below Poverty level by Age Groups</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;18 to 64 years&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;65 years and over&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Under 18 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Under 18 years&quot;</bucket>
              <bucket>&quot;65 years and over&quot;</bucket>
              <bucket>&quot;18 to 64 years&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
            <format attr='font-size' value='4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' value='Year'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='15'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{1A0B9563-583C-408F-B018-B1E022B1045E}' />
    </worksheet>
    <worksheet name='Age groups bos'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12' underline='true'>Below Poverty Level by Age Groups</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='Sum' name='[sum:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;18 to 64 years&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;65 years and over&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Under 18 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Under 18 years&quot;</bucket>
              <bucket>&quot;18 to 64 years&quot;</bucket>
              <bucket>&quot;65 years and over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value='true' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' value='Year'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='15'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#ff9d9a' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{3BFD520E-F6D0-41EA-9691-1BCD37E319BC}' />
    </worksheet>
    <worksheet name='Education'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12' underline='true'>Below Poverty level by Education</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Bachelor&apos;s degree or higher&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;High school graduate (includes equivalency)&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Less than high school graduate&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Some college, associate&apos;s degree&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than high school graduate&quot;</bucket>
              <bucket>&quot;High school graduate (includes equivalency)&quot;</bucket>
              <bucket>&quot;Some college, associate&apos;s degree&quot;</bucket>
              <bucket>&quot;Bachelor&apos;s degree or higher&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <wedge-size column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.84558010101318359' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B2B7A988-D540-49C5-8A41-FA371D225A50}' />
    </worksheet>
    <worksheet name='Education bos'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14' underline='true'>Below Poverty level by Education</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='Sum' name='[sum:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Bachelor&apos;s degree or higher&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;High school graduate (includes equivalency)&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Less than high school graduate&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Some college, associate&apos;s degree&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than high school graduate&quot;</bucket>
              <bucket>&quot;High school graduate (includes equivalency)&quot;</bucket>
              <bucket>&quot;Some college, associate&apos;s degree&quot;</bucket>
              <bucket>&quot;Bachelor&apos;s degree or higher&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' />
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BD0C3DFE-2464-4099-A9CB-CC4A34D88016}' />
    </worksheet>
    <worksheet name='Employed Gender'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>Employment in gender</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Inclusions (Label,Percent Below Poverty Estimate,Year)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:label:nk]' member='&quot;Female&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2013' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.300000000000001' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2014' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='16.699999999999999' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                      </groupfilter>
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.6' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2016' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.699999999999999' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2017' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.9' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2019' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.5' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2020' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2021' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.800000000000001' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2022' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.6' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:label:nk]' member='&quot;Male&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2013' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.6' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2014' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2015' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.0' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2016' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.9' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2017' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.0' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2018' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.1' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2019' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.8000000000000007' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2020' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.6999999999999993' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2021' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.0' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year:qk]' member='2022' />
                      <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.0' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:label:nk]' />
                <hierarchy name='[none:percent_below_poverty_estimate:qk]' />
                <hierarchy name='[none:year:qk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Inclusions (Label,Percent Below Poverty Estimate,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' field-type='quantitative' max='30.0' min='5.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='rows' value='% BPL' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' field-type='quantitative' max='2023' min='2012' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <lod column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='left' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='1' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{2235EFA7-1412-4217-A225-74D18924B8A0}' />
    </worksheet>
    <worksheet name='Employment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='member' level='[none:label:nk]' member='&quot;Employed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Unemployed&quot;</bucket>
              <bucket>&quot;Employed&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' field-type='quantitative' max='24.0' min='5.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value='false' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Label:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{378E64E5-194B-4971-9A60-BB53F9BD2C2F}' />
    </worksheet>
    <worksheet name='Employment (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='member' level='[none:label:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Unemployed&quot;</bucket>
              <bucket>&quot;Employed&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' field-type='quantitative' max='50.0' min='20.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Label:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]>%]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
                <run bold='true'>%</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.94453036785125732' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6A574E9A-F838-4738-A2AC-03A921A54E1F}' />
    </worksheet>
    <worksheet name='Employment bos'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='Sum' name='[sum:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Employed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.0544751882553101' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]</cols>
      </table>
      <simple-id uuid='{A30AF459-68D0-4E31-9549-81895A325412}' />
    </worksheet>
    <worksheet name='Employment bos (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='Sum' name='[sum:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]</cols>
      </table>
      <simple-id uuid='{F663D7E1-1F4D-42F5-B331-6DBF1026E8E8}' />
    </worksheet>
    <worksheet name='Gender'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:label:nk]' />
                <groupfilter function='level-members' level='[none:percent_below_poverty_estimate:qk]' />
                <groupfilter function='level-members' level='[none:year:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Female&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2013' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.300000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='16.699999999999999' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.6' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.699999999999999' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2017' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.9' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='43.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='41.899999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.5' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='39.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.799999999999997' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.800000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='37.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.899999999999999' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Male&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2013' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='29.899999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='30.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='29.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.9' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='29.5' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2017' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='28.300000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='35.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.1' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='28.899999999999999' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.100000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.8000000000000007' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='26.800000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='34.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.6999999999999993' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='26.600000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='35.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='24.199999999999999' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='35.200000000000003' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='25.800000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:label:nk]' />
                  <hierarchy name='[none:percent_below_poverty_estimate:qk]' />
                  <hierarchy name='[none:year:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='member' level='[none:label:nk]' member='&quot;Female&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' field-type='quantitative' max='38.0' min='25.0' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='bold' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]' value='false' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='bold' />
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Label:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.94453036785125732' />
                <format attr='mark-labels-show' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='429' />
                <format attr='maxwidth' value='429' />
                <format attr='minheight' value='20' />
                <format attr='maxheight' value='20' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{D5D56FCD-FAAD-4E4E-8202-C24EBB99A265}' />
    </worksheet>
    <worksheet name='Gender (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:label:nk]' />
                <groupfilter function='level-members' level='[none:percent_below_poverty_estimate:qk]' />
                <groupfilter function='level-members' level='[none:year:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Female&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2013' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.300000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='16.699999999999999' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.6' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.699999999999999' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2017' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.9' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='43.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='41.899999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.5' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='39.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.799999999999997' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.800000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='37.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.899999999999999' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Male&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2013' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.6' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.0' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.9' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2017' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='35.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.1' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.100000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.8000000000000007' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='34.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.6999999999999993' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='35.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='35.200000000000003' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='36.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:label:nk]' />
                  <hierarchy name='[none:percent_below_poverty_estimate:qk]' />
                  <hierarchy name='[none:year:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='member' level='[none:label:nk]' member='&quot;Male&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' field-type='quantitative' max='35.0' min='25.0' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='' />
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Label:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Below Poverty Estimate:	</run>
                <run bold='true'><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='right' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.94453036785125732' />
                <format attr='mark-labels-show' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{AA58CA09-A0C0-47C3-B71D-76272FA6347F}' />
    </worksheet>
    <worksheet name='Gender Bos'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='None' name='[none:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (label ,percent below poverty,year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:label (Poverty_Boston.csv):nk]' />
                <groupfilter function='level-members' level='[none:Calculation_1624603217542516736:qk]' />
                <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Female&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2013' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='11.1' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='30.300000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='50.600000000000001' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2014' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='11.800000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='31.900000000000002' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='41.600000000000001' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2015' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='10.800000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='28.999999999999996' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='45.700000000000003' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2016' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='10.800000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='31.800000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='42.200000000000003' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2017' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='10.199999999999999' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='27.500000000000004' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='40.200000000000003' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2018' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='8.4000000000000004' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='27.600000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='40.5' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2019' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='7.7999999999999998' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='25.300000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='34.700000000000003' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2021' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='8.5' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='28.600000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='40.899999999999999' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2022' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='7.2000000000000011' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='26.0' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='64.5' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2023' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='9.1999999999999993' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='25.900000000000002' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='39.399999999999999' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:label (Poverty_Boston.csv):nk]' />
                  <hierarchy name='[none:Calculation_1624603217542516736:qk]' />
                  <hierarchy name='[none:year (Poverty_Boston.csv):qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Female&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (label ,percent below poverty,year)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff9da7' />
                <format attr='size' value='1.0434806346893311' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]</cols>
      </table>
      <simple-id uuid='{2099755B-38E2-499E-9195-D40F4E4D6310}' />
    </worksheet>
    <worksheet name='Gender Bos (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='None' name='[none:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (label ,percent below poverty,year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:label (Poverty_Boston.csv):nk]' />
                <groupfilter function='level-members' level='[none:Calculation_1624603217542516736:qk]' />
                <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Male&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2013' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='8.6999999999999993' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='26.200000000000003' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='33.899999999999999' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2014' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='7.4000000000000012' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='27.300000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='35.299999999999997' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2015' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='7.0999999999999996' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='23.600000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='38.5' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2016' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='6.0999999999999996' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='22.399999999999999' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='39.399999999999999' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2017' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='5.5999999999999996' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='24.5' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='41.0' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2018' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='6.0999999999999996' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='25.800000000000001' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='29.899999999999999' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2019' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='5.0999999999999996' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='23.5' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='32.600000000000001' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2021' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='5.7000000000000002' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='21.5' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='27.699999999999996' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2022' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='5.5999999999999996' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='23.5' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='30.599999999999998' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2023' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='6.0' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='19.199999999999999' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='34.0' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:label (Poverty_Boston.csv):nk]' />
                  <hierarchy name='[none:Calculation_1624603217542516736:qk]' />
                  <hierarchy name='[none:year (Poverty_Boston.csv):qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Male&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (label ,percent below poverty,year)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]</cols>
      </table>
      <simple-id uuid='{3E22B2F5-FF47-422C-9B69-103E6E56A722}' />
    </worksheet>
    <worksheet name='Race'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12' underline='true'>Below Poverty level by Race</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label]' new-bin='true'>
                <bin default-name='false' value='&quot;American Indian and Alaskan native&quot;'>
                  <value>&quot;American Indian and Alaska Native&quot;</value>
                  <value>&quot;American Indian and Alaska Native alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asian&quot;'>
                  <value>&quot;Asian&quot;</value>
                  <value>&quot;Asian alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Black or African American&quot;'>
                  <value>&quot;Black or African American&quot;</value>
                  <value>&quot;Black or African American alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hispanic or Latino origin&quot;'>
                  <value>&quot;Hispanic or Latino origin (of any race)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Native Hawaiian and Other Pacific Islander&quot;'>
                  <value>&quot;Native Hawaiian and Other Pacific Islander&quot;</value>
                  <value>&quot;Native Hawaiian and Other Pacific Islander alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Some other race&quot;'>
                  <value>&quot;Some other race&quot;</value>
                  <value>&quot;Some other race alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;White&quot;'>
                  <value>&quot;White&quot;</value>
                  <value>&quot;White alone&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Label (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Label (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Label (group)]' member='&quot;One race&quot;' />
                <groupfilter function='member' level='[Label (group)]' member='&quot;White alone, not Hispanic or Latino&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;American Indian and Alaska Native&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;American Indian and Alaska Native alone&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Asian&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Asian alone&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Black or African American&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Black or African American alone&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Hispanic or Latino origin (of any race)&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Native Hawaiian and Other Pacific Islander&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Native Hawaiian and Other Pacific Islander alone&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;One race&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Some other race&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Some other race alone&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Two or more races&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;White&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;White alone&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;White alone, not Hispanic or Latino&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Label (group)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' field-type='quantitative' min='2012' range-type='fixedmin' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Label (group)]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' palette='red_green_gold_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' value='bold' />
            <format attr='text-decoration' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Label (group)]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{DF075BB8-BBA2-49F6-A3BA-41580909F60A}' />
    </worksheet>
    <worksheet name='Race bos'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12' underline='true'>Below Poverty level by Race</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column datatype='string' name='[label  (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label (Poverty_Boston.csv)]' new-bin='true'>
                <bin default-name='false' value='&quot;American Indian and Alaska Native&quot;'>
                  <value>&quot;American Indian and Alaska Native&quot;</value>
                  <value>&quot;American Indian and Alaska Native alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asian&quot;'>
                  <value>&quot;Asian&quot;</value>
                  <value>&quot;Asian alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Black or African American&quot;'>
                  <value>&quot;Black or African American&quot;</value>
                  <value>&quot;Black or African American alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hispanic or Latino origin&quot;'>
                  <value>&quot;Hispanic or Latino origin (of any race)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Native Hawaiian and Other Pacific Islander&quot;'>
                  <value>&quot;Native Hawaiian and Other Pacific Islander&quot;</value>
                  <value>&quot;Native Hawaiian and Other Pacific Islander alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Some other race&quot;'>
                  <value>&quot;Some other race&quot;</value>
                  <value>&quot;Some other race alone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;White&quot;'>
                  <value>&quot;White&quot;</value>
                  <value>&quot;White alone&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='Sum' name='[sum:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[label  (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[label  (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[label  (group)]' member='&quot;American Indian and Alaska Native&quot;' />
                <groupfilter function='member' level='[label  (group)]' member='&quot;Native Hawaiian and Other Pacific Islander&quot;' />
                <groupfilter function='member' level='[label  (group)]' member='&quot;One race&quot;' />
                <groupfilter function='member' level='[label  (group)]' member='&quot;RACE AND HISPANIC OR LATINO ORIGIN&quot;' />
                <groupfilter function='member' level='[label  (group)]' member='&quot;White alone, not Hispanic or Latino&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;American Indian and Alaska Native&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;American Indian and Alaska Native alone&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Asian&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Asian alone&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Black or African American&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Black or African American alone&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Hispanic or Latino origin (of any race)&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Native Hawaiian and Other Pacific Islander&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Native Hawaiian and Other Pacific Islander alone&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;One race&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;RACE AND HISPANIC OR LATINO ORIGIN&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Some other race&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Some other race alone&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Two or more races&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;White&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;White alone&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;White alone, not Hispanic or Latino&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[label  (group)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='bold' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[label  (group)]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[label  (group)]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{DA049D84-1EDE-4579-9D39-7F95EBE4345E}' />
    </worksheet>
    <worksheet name='Total vs bpl'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Below Poverty Estimate' datatype='real' name='[below_poverty_estimate]' role='measure' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[below_poverty_estimate]' derivation='Sum' name='[sum:below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_estimate]' derivation='Sum' name='[sum:total_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Total Estimate' datatype='real' name='[total_estimate]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='member' level='[none:label:nk]' member='&quot;Population for whom poverty status is determined&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate:qk]' scope='cols' value='Total Below Poverty Estimate' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' scope='cols' value='% Below Poverty Estimate' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value='bold' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value='false' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' value='Year'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='18'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-color' value='#ff9d9a' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</rows>
        <cols>([federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate:qk] + ([federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate:qk] + [federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]))</cols>
      </table>
      <simple-id uuid='{6284D24E-DF88-47B2-8B8A-6DC80A0ED0A2}' />
    </worksheet>
    <worksheet name='Total vs bpl bos'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='below poverty estimate' datatype='real' name='[below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='Sum' name='[sum:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[below_poverty_estimate (Poverty_Boston.csv)]' derivation='Sum' name='[sum:below_poverty_estimate (Poverty_Boston.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_estimate (Poverty_Boston.csv)]' derivation='Sum' name='[sum:total_estimate (Poverty_Boston.csv):qk]' pivot='key' type='quantitative' />
            <column caption='total estimate' datatype='real' name='[total_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Population for whom poverty status is determined&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate (Poverty_Boston.csv):qk]' scope='cols' value='Total Estimate' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate (Poverty_Boston.csv):qk]' scope='cols' value='Total Below Poverty Estimate' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' scope='cols' value='%  Below Poverty Estimate' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate (Poverty_Boston.csv):qk]' value='bold' />
            <format attr='font-weight' data-class='subtotal' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate (Poverty_Boston.csv):qk]' value='bold' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value='false' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate (Poverty_Boston.csv):qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate (Poverty_Boston.csv):qk]' value='bold' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' value='Year'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='18'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate (Poverty_Boston.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate (Poverty_Boston.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='bottom' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate (Poverty_Boston.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate (Poverty_Boston.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff9d9a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</rows>
        <cols>([federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:total_estimate (Poverty_Boston.csv):qk] + ([federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:below_poverty_estimate (Poverty_Boston.csv):qk] + [federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]))</cols>
      </table>
      <simple-id uuid='{78758548-E20F-465B-B3D9-C82AB2252E19}' />
    </worksheet>
    <worksheet name='Unemployment Gender'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>Unemployment in gender</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:label:nk]' />
                <groupfilter function='level-members' level='[none:percent_below_poverty_estimate:qk]' />
                <groupfilter function='level-members' level='[none:year:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Female&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2013' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.300000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='34.5' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='16.699999999999999' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='35.299999999999997' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='34.0' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.699999999999999' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='33.0' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2017' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.9' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='32.299999999999997' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='15.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='32.799999999999997' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.5' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='30.300000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='28.199999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.800000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='28.300000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='27.800000000000001' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Male&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2013' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='14.6' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='29.899999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='13.300000000000001' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='30.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='12.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='29.399999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.9' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='29.5' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2017' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='28.300000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='11.1' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='28.899999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.8000000000000007' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='26.800000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.6999999999999993' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='26.600000000000001' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='9.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='24.199999999999999' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='10.0' />
                          <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='25.800000000000001' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:label:nk]' />
                  <hierarchy name='[none:percent_below_poverty_estimate:qk]' />
                  <hierarchy name='[none:year:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' field-type='quantitative' max='50.0' min='15.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' scope='rows' value='% BPL' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' field-type='quantitative' max='2023' min='2016' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='left' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='1' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6B2A2D5E-B9B4-4B57-AF92-F0BA934A7619}' />
    </worksheet>
    <worksheet name='Work Experience'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12' underline='true'>Below Poverty level by Work Experience</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column-instance column='[percent_below_poverty_estimate]' derivation='Avg' name='[avg:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High school graduate (includes equivalency)&quot;' value='High school graduate' />
              </aliases>
            </column>
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='None' name='[none:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Below Poverty Estimate' datatype='real' name='[percent_below_poverty_estimate]' role='measure' type='quantitative' />
            <column-instance column='[percent_below_poverty_estimate]' derivation='Sum' name='[sum:percent_below_poverty_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:label:nk]' />
                <groupfilter function='level-members' level='[none:percent_below_poverty_estimate:qk]' />
                <groupfilter function='level-members' level='[none:year:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Did not work&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2013' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='50.299999999999997' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='51.399999999999999' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2015' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='51.299999999999997' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='53.0' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2017' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='51.100000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='51.600000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='50.200000000000003' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='50.700000000000003' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='49.700000000000003' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='50.799999999999997' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label:nk]' member='&quot;Worked full-time, year-round in the past 12 months&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:year:qk]' member='2013' />
                          <groupfilter function='member' level='[none:year:qk]' member='2015' />
                          <groupfilter function='member' level='[none:year:qk]' member='2016' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='3.7999999999999998' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2014' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='4.5' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2018' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='3.8999999999999999' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2019' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='3.2999999999999998' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2020' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='2.7999999999999998' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2021' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='2.6000000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year:qk]' member='2022' />
                        <groupfilter function='member' level='[none:percent_below_poverty_estimate:qk]' member='2.5' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:label:nk]' />
                  <hierarchy name='[none:percent_below_poverty_estimate:qk]' />
                  <hierarchy name='[none:year:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Did not work&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Worked full-time, year-round in the past 12 months&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Worked less than full-time, year-round in the past 12 months&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Worked part-time or part-year in the past 12 months&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Did not work&quot;</bucket>
              <bucket>&quot;Worked less than full-time, year-round in the past 12 months&quot;</bucket>
              <bucket>&quot;Worked part-time or part-year in the past 12 months&quot;</bucket>
              <bucket>&quot;Worked full-time, year-round in the past 12 months&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (Label,Percent Below Poverty Estimate,Year)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' reverse='true' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#d62420</color>
                <color>#d63430</color>
                <color>#d64441</color>
                <color>#d65451</color>
                <color>#d76562</color>
                <color>#d77573</color>
                <color>#d78684</color>
                <color>#d79695</color>
                <color>#d8a7a6</color>
                <color>#d8b7b6</color>
                <color>#d8c8c7</color>
                <color>#d9d9d9</color>
                <color>#ced7d1</color>
                <color>#c4d5c9</color>
                <color>#bad4c1</color>
                <color>#b0d2ba</color>
                <color>#a6d1b2</color>
                <color>#9ccfab</color>
                <color>#93cea4</color>
                <color>#89cc9d</color>
                <color>#80cb95</color>
                <color>#77c98e</color>
                <color>#6ec888</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' reverse='true' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#d62420</color>
                <color>#d63430</color>
                <color>#d64441</color>
                <color>#d65451</color>
                <color>#d76562</color>
                <color>#d77573</color>
                <color>#d78684</color>
                <color>#d79695</color>
                <color>#d8a7a6</color>
                <color>#d8b7b6</color>
                <color>#d8c8c7</color>
                <color>#d9d9d9</color>
                <color>#ced7d1</color>
                <color>#c4d5c9</color>
                <color>#bad4c1</color>
                <color>#b0d2ba</color>
                <color>#a6d1b2</color>
                <color>#9ccfab</color>
                <color>#93cea4</color>
                <color>#89cc9d</color>
                <color>#80cb95</color>
                <color>#77c98e</color>
                <color>#6ec888</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='0' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:percent_below_poverty_estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='4' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{E7C25E0C-3C06-48A1-A00C-16B0467F4F82}' />
    </worksheet>
    <worksheet name='work exp bos'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12' underline='true'>Below Povery Level by Education</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
            <column caption='percent below poverty' datatype='real' name='[Calculation_1624603217542516736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[percent_below_poverty_estimate (Poverty_Boston.csv)]*100' />
            </column>
            <column-instance column='[Calculation_1624603217542516736]' derivation='Avg' name='[avg:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column caption='label ' datatype='string' name='[label (Poverty_Boston.csv)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1624603217542516736]' derivation='None' name='[none:Calculation_1624603217542516736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[label (Poverty_Boston.csv)]' derivation='None' name='[none:label (Poverty_Boston.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='percent below poverty estimate' datatype='real' hidden='true' name='[percent_below_poverty_estimate (Poverty_Boston.csv)]' role='measure' type='quantitative' />
            <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (label ,percent below poverty,year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:label (Poverty_Boston.csv):nk]' />
                <groupfilter function='level-members' level='[none:Calculation_1624603217542516736:qk]' />
                <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Did not work&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2013' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='40.799999999999997' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2014' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='42.200000000000003' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2015' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='40.100000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2016' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='43.0' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2017' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='38.399999999999999' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2018' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='37.700000000000003' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2019' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='41.5' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2021' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='39.600000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2022' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='40.0' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2023' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='33.600000000000001' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Worked full-time, year-round in the past 12 months&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2013' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='1.2' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2014' />
                          <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2017' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='2.1000000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2015' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='1.5' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2016' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='2.5' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2018' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='2.2999999999999998' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2019' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='1.6000000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2021' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='2.0' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2022' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='1.1000000000000001' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:year (Poverty_Boston.csv):qk]' member='2023' />
                        <groupfilter function='member' level='[none:Calculation_1624603217542516736:qk]' member='1.3999999999999999' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:label (Poverty_Boston.csv):nk]' />
                  <hierarchy name='[none:Calculation_1624603217542516736:qk]' />
                  <hierarchy name='[none:year (Poverty_Boston.csv):qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Did not work&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Worked full-time, year-round in the past 12 months&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Worked less than full-time, year-round in the past 12 months&quot;' />
              <groupfilter function='member' level='[none:label (Poverty_Boston.csv):nk]' member='&quot;Worked part-time or part-year in the past 12 months&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Did not work&quot;</bucket>
              <bucket>&quot;Worked less than full-time, year-round in the past 12 months&quot;</bucket>
              <bucket>&quot;Worked part-time or part-year in the past 12 months&quot;</bucket>
              <bucket>&quot;Worked full-time, year-round in the past 12 months&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:year (Poverty_Boston.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[Exclusions (label ,percent below poverty,year)]</column>
            <column>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='4' />
            <format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' value='bold' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' id='legend-color' value='4' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' id='legend-color' value='bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' />
              <text column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[avg:Calculation_1624603217542516736:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]</rows>
        <cols>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</cols>
      </table>
      <simple-id uuid='{CB2B534B-D677-4C2E-9BDA-AF44DBF2C3ED}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
      </datasources>
      <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98200' id='147' param='vert' type-v2='layout-flow' w='98912' x='544' y='900'>
            <zone fixed-size='24' h='3600' id='148' is-fixed='true' type-v2='title' w='98912' x='544' y='900'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='94600' id='145' param='vert' type-v2='layout-flow' w='98912' x='544' y='4500'>
              <zone h='94600' id='58' type-v2='layout-basic' w='98912' x='544' y='4500' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11971' id='28' name='Total vs bpl' w='99921' x='159' y='5200' />
        <zone h='43410' id='31' name='Race' w='47002' x='52838' y='16203' />
        <zone h='6892' id='32' name='Race' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' type-v2='color' w='11218' x='88301' y='15236' />
        <zone forceUpdate='true' h='3628' id='76' type-v2='text' w='18983' x='79' y='17050'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20' underline='true'>Poverty Stats</run>
          </formatted-text>
        </zone>
        <zone h='40134' id='77' name='Work Experience' w='36934' x='60445' y='59329' />
        <zone h='45345' id='79' name='Education' w='29468' x='3813' y='54534' />
        <zone h='24426' id='80' name='Age groups' w='24940' x='33280' y='58525' />
        <zone h='12696' id='82' name='Education' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type-v2='color' w='12947' x='1271' y='59129' />
        <zone h='4353' id='85' mode='checkdropdown' name='Total vs bpl' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' show-apply='true' show-morefewerbutton='true' type-v2='filter' values='database' w='28118' x='35663' y='1572' />
        <zone forceUpdate='true' h='6167' id='87' type-v2='text' w='5719' x='7228' y='21040'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Female</run>
          </formatted-text>
        </zone>
        <zone h='5320' id='88' name='Gender (2)' w='37172' x='14138' y='27086' />
        <zone forceUpdate='true' h='7013' id='89' type-v2='text' w='3971' x='8499' y='26360'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Male</run>
          </formatted-text>
        </zone>
        <zone h='11729' id='92' name='Work Experience' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type-v2='color' w='11517' x='49245' y='87062' />
        <zone h='6892' id='102' type-v2='text' w='7705' x='5401' y='32648'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Employed</run>
          </formatted-text>
        </zone>
        <zone h='5441' id='103' name='Employment (2)' w='36775' x='13979' y='40145' />
        <zone h='8827' id='104' type-v2='text' w='10723' x='3654' y='38694'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Unemployed</run>
          </formatted-text>
        </zone>
        <zone h='7134' id='105' name='Gender' w='36060' x='14059' y='21282' />
        <zone h='8585' id='110' name='Employment' w='20492' x='14218' y='29867' />
        <zone h='4837' id='137' type-v2='dashboard-object' w='21207' x='78396' y='1209'>
          <button action='tabdoc:goto-sheet window-id=&quot;{942CF26A-0262-460D-85D9-9B9C529D308C}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Switch to Boston City</caption>
              <button-caption-font-style bold='true' fontname='Tableau Bold' fontsize='16' />
              <format attr='background-color' value='#e6e6e6' />
              <format attr='border-style' value='dashed' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
        <zone forceUpdate='true' h='4474' id='149' type-v2='text' w='27244' x='477' y='846'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>District 7 Poverty Analysis</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='173' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98200' id='172' param='vert' type-v2='layout-flow' w='98912' x='544' y='900'>
                <zone fixed-size='24' h='3600' id='148' type-v2='title' w='98912' x='544' y='900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4474' id='149' type-v2='text' w='27244' x='477' y='846'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>District 7 Poverty Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4837' id='137' type-v2='dashboard-object' w='21207' x='78396' y='1209'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{942CF26A-0262-460D-85D9-9B9C529D308C}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Switch to Boston City</caption>
                      <button-caption-font-style bold='true' fontname='Tableau Bold' fontsize='16' />
                      <format attr='background-color' value='#e6e6e6' />
                      <format attr='border-style' value='dashed' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4353' id='85' mode='checkdropdown' name='Total vs bpl' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' show-apply='true' show-morefewerbutton='true' type-v2='filter' values='database' w='28118' x='35663' y='1572'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='11971' id='28' is-fixed='true' name='Total vs bpl' w='99921' x='159' y='5200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43410' id='31' is-fixed='true' name='Race' w='47002' x='52838' y='16203'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6892' id='32' name='Race' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' type-v2='color' w='11218' x='88301' y='15236'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3628' id='76' type-v2='text' w='18983' x='79' y='17050'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20' underline='true'>Poverty Stats</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6167' id='87' type-v2='text' w='5719' x='7228' y='21040'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Female</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='7134' id='105' is-fixed='true' name='Gender' w='36060' x='14059' y='21282'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7013' id='89' type-v2='text' w='3971' x='8499' y='26360'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Male</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='42' h='5320' id='88' is-fixed='true' name='Gender (2)' w='37172' x='14138' y='27086'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='69' h='8585' id='110' is-fixed='true' name='Employment' w='20492' x='14218' y='29867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6892' id='102' type-v2='text' w='7705' x='5401' y='32648'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Employed</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8827' id='104' type-v2='text' w='10723' x='3654' y='38694'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Unemployed</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='44' h='5441' id='103' is-fixed='true' name='Employment (2)' w='36775' x='13979' y='40145'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45345' id='79' is-fixed='true' name='Education' w='29468' x='3813' y='54534'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12696' id='82' name='Education' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type-v2='color' w='12947' x='1271' y='59129'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='196' h='24426' id='80' is-fixed='true' name='Age groups' w='24940' x='33280' y='58525'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40134' id='77' is-fixed='true' name='Work Experience' w='36934' x='60445' y='59329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11729' id='92' name='Work Experience' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type-v2='color' w='11517' x='49245' y='87062'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08D335BA-6A7C-4A62-BBEA-44A8C350B49D}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='District7 (2)' name='federated.1i4b7vp1ooj9u01557d2b0x0poh5' />
      </datasources>
      <datasource-dependencies datasource='federated.1i4b7vp1ooj9u01557d2b0x0poh5'>
        <column-instance column='[year (Poverty_Boston.csv)]' derivation='None' name='[none:year (Poverty_Boston.csv):ok]' pivot='key' type='ordinal' />
        <column caption='year' datatype='integer' name='[year (Poverty_Boston.csv)]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='3' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='33' param='vert' type-v2='layout-flow' w='98730' x='635' y='967'>
            <zone h='2176' id='34' type-v2='title' w='98730' x='635' y='967'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='95890' id='31' param='vert' type-v2='layout-flow' w='98730' x='635' y='3143'>
              <zone h='95890' id='4' type-v2='layout-basic' w='98730' x='635' y='3143' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14631' id='1' name='Total vs bpl bos' w='99921' x='79' y='5200' />
        <zone h='4353' id='2' mode='checkdropdown' name='Total vs bpl bos' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' show-apply='true' type-v2='filter' w='24861' x='35981' y='1572' />
        <zone h='24184' id='8' name='Age groups bos' w='24305' x='35504' y='56348' />
        <zone h='5683' id='9' name='Gender Bos' w='33280' x='13979' y='21644' />
        <zone h='5441' id='10' name='Gender Bos (2)' w='28356' x='13979' y='27207' />
        <zone h='37727' id='11' name='Race bos' w='51549' x='48292' y='16203' />
        <zone h='5683' id='12' name='Race bos' pane-specification-id='2' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' type-v2='color' w='15250' x='84114' y='14510' />
        <zone h='6530' id='16' name='Employment bos' w='12311' x='13900' y='32890' />
        <zone h='5079' id='17' name='Employment bos (2)' w='33280' x='13820' y='39178' />
        <zone h='44740' id='20' name='work exp bos' w='36934' x='62351' y='53809' />
        <zone h='4716' id='23' type-v2='dashboard-object' w='21366' x='78396' y='1330'>
          <button action='tabdoc:goto-sheet window-id=&quot;{B76AD923-24C6-4C51-9133-C305017FB941}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Switch to District 7</caption>
              <button-caption-font-style bold='true' fontname='Tableau Bold' fontsize='16' />
              <format attr='background-color' value='#e6e6e6' />
              <format attr='border-style' value='dashed' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
        <zone forceUpdate='true' h='4474' id='35' type-v2='text' w='29547' x='238' y='1209'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>Boston City Poverty Analysis</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3990' id='36' type-v2='text' w='18189' x='397' y='17050'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20' underline='true'>Poverty Stats</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6892' id='39' type-v2='text' w='7943' x='6990' y='21040'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Female</run>
          </formatted-text>
        </zone>
        <zone h='5683' id='40' type-v2='text' w='5957' x='8340' y='27207'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Male</run>
          </formatted-text>
        </zone>
        <zone h='5441' id='41' type-v2='text' w='7943' x='5401' y='33253'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Employed</run>
          </formatted-text>
        </zone>
        <zone h='6288' id='42' type-v2='text' w='9373' x='3733' y='38936'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Unemlpoyed</run>
          </formatted-text>
        </zone>
        <zone h='44861' id='45' name='Education bos' w='33280' x='2462' y='53083' />
        <zone h='11850' id='46' name='Education bos' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type-v2='color' w='21843' x='1112' y='56227' />
        <zone h='11004' id='63' name='work exp bos' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type-v2='color' w='12470' x='50278' y='87787' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='65' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='64' param='vert' type-v2='layout-flow' w='98730' x='635' y='967'>
                <zone h='2176' id='34' type-v2='title' w='98730' x='635' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4474' id='35' type-v2='text' w='29547' x='238' y='1209'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>Boston City Poverty Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4716' id='23' type-v2='dashboard-object' w='21366' x='78396' y='1330'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{B76AD923-24C6-4C51-9133-C305017FB941}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Switch to District 7</caption>
                      <button-caption-font-style bold='true' fontname='Tableau Bold' fontsize='16' />
                      <format attr='background-color' value='#e6e6e6' />
                      <format attr='border-style' value='dashed' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4353' id='2' mode='checkdropdown' name='Total vs bpl bos' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' show-apply='true' type-v2='filter' w='24861' x='35981' y='1572'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='117' h='14631' id='1' is-fixed='true' name='Total vs bpl bos' w='99921' x='79' y='5200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37727' id='11' is-fixed='true' name='Race bos' w='51549' x='48292' y='16203'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5683' id='12' name='Race bos' pane-specification-id='2' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' type-v2='color' w='15250' x='84114' y='14510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3990' id='36' type-v2='text' w='18189' x='397' y='17050'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20' underline='true'>Poverty Stats</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6892' id='39' type-v2='text' w='7943' x='6990' y='21040'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Female</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='46' h='5683' id='9' is-fixed='true' name='Gender Bos' w='33280' x='13979' y='21644'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5683' id='40' type-v2='text' w='5957' x='8340' y='27207'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Male</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='43' h='5441' id='10' is-fixed='true' name='Gender Bos (2)' w='28356' x='13979' y='27207'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='52' h='6530' id='16' is-fixed='true' name='Employment bos' w='12311' x='13900' y='32890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5441' id='41' type-v2='text' w='7943' x='5401' y='33253'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Employed</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6288' id='42' type-v2='text' w='9373' x='3733' y='38936'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Unemlpoyed</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='41' h='5079' id='17' is-fixed='true' name='Employment bos (2)' w='33280' x='13820' y='39178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44861' id='45' is-fixed='true' name='Education bos' w='33280' x='2462' y='53083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11850' id='46' name='Education bos' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type-v2='color' w='21843' x='1112' y='56227'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44740' id='20' is-fixed='true' name='work exp bos' w='36934' x='62351' y='53809'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11004' id='63' name='work exp bos' pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type-v2='color' w='12470' x='50278' y='87787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='24184' id='8' is-fixed='true' name='Age groups bos' w='24305' x='35504' y='56348'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{779FB4C7-EC0F-4FCA-9738-B5561BD7DE89}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='291' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='1' param='vert' removable='false' type-v2='layout-flow' w='98730' x='635' y='967'>
            <zone h='1209' id='3' type-v2='title' w='98730' x='635' y='967' />
            <zone fixed-size='79' h='9553' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98730' x='635' y='2176' />
            <zone h='87304' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98730' x='635' y='11729'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Poverty Analysis' captured-sheet='' id='4' />
                  <story-point caption=' Population Below Poverty Level ' captured-sheet='Dashboard 1' id='2'>
                    <capturedDeltas>
                      <worksheet name='Age groups'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Education'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Employment'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Employment (2)'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Gender'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Gender (2)'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Race'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total vs bpl'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Work Experience'>
                        <filter class='categorical' column='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]'>
                          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='42563' hidden='true' id='6' story-point-id='4' type-v2='text' w='84591' x='6354' y='19226'>
          <formatted-text>
            <run bold='true' fontsize='48'>Poverty Analysis of District 7 and Boston City</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{335E886F-5E2C-430B-BE65-4BEB085A6628}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total vs bpl'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3FF86C2E-47C5-4343-BE2E-E41D1445E93C}' />
    </window>
    <window class='worksheet' name='Age groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:percent_below_poverty_estimate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC5FD99-BD09-43DD-960A-C63123F3971B}' />
    </window>
    <window class='worksheet' name='Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9A3A675B-84D3-4356-B0C4-22F0C6D93011}' />
    </window>
    <window class='worksheet' name='Gender (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{510BD769-E712-4B25-A35D-5F9FD3B51CEE}' />
    </window>
    <window class='worksheet' name='Race'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{20AF81D3-2685-488B-8540-49212505230E}' />
    </window>
    <window class='worksheet' name='Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{479F700E-A398-455E-8CF2-CADF478CAA65}' />
    </window>
    <window class='worksheet' name='Employment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{34179B18-CCDB-4413-AFEB-72D07D9F2FD0}' />
    </window>
    <window class='worksheet' name='Employment (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:percent_below_poverty_estimate:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{EFD4DE81-52AF-48A7-A230-9042767D4A8B}' />
    </window>
    <window class='worksheet' name='Employed Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9A0FFE53-3E4D-42F1-AE20-C6AF1E347492}' />
    </window>
    <window class='worksheet' name='Unemployment Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F8B1C793-ECEA-4D64-A068-8EFD507EB3F1}' />
    </window>
    <window class='worksheet' name='Work Experience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2E816971-1472-4257-9ECB-4EFDC3DCD300}' />
    </window>
    <window class='worksheet' name='Total vs bpl bos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' show-apply='true' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CCFECB9-E656-44DA-A2AC-AA5438A7CC66}' />
    </window>
    <window class='worksheet' name='Age groups bos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' type='filter' />
            <card pane-specification-id='8' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C56F3882-15E2-4AAE-836C-0A7976179811}' />
    </window>
    <window class='worksheet' name='Gender Bos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2337A56B-BDB2-404B-BCC9-3691DA8F3872}' />
    </window>
    <window class='worksheet' name='Gender Bos (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:Calculation_1624603217542516736:qk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F658B7C-46BD-410F-BC09-73E3931958DE}' />
    </window>
    <window class='worksheet' name='Race bos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[sum:Calculation_1624603217542516736:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50E70553-C6C6-41A3-A1FB-2DBE2FB38F7F}' />
    </window>
    <window class='worksheet' name='Education bos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7264DEB2-B97A-4D10-AED7-92D3FAA26428}' />
    </window>
    <window class='worksheet' name='Employment bos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4DE631C-73A0-4FC5-AD11-DF5D8BA6FB54}' />
    </window>
    <window class='worksheet' name='Employment bos (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):ok]</field>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FAC3B54-344A-4BE9-81D5-41908D6CC770}' />
    </window>
    <window class='worksheet' name='work exp bos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
          <color-one-way>
            <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:year (Poverty_Boston.csv):qk]</field>
          </color-one-way>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{68BA5318-5A09-4AA7-8D1C-C5B1D781CD7E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Age groups'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Education'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Employment'>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Employment (2)'>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Gender' />
        <viewpoint name='Gender (2)' />
        <viewpoint name='Race'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total vs bpl' />
        <viewpoint name='Work Experience'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='137' />
      <simple-id uuid='{B76AD923-24C6-4C51-9133-C305017FB941}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Age groups bos'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Education bos'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Employment bos' />
        <viewpoint name='Employment bos (2)' />
        <viewpoint name='Gender Bos' />
        <viewpoint name='Gender Bos (2)' />
        <viewpoint name='Race bos'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total vs bpl bos' />
        <viewpoint name='work exp bos'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i4b7vp1ooj9u01557d2b0x0poh5].[none:label (Poverty_Boston.csv):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='23' />
      <simple-id uuid='{942CF26A-0262-460D-85D9-9B9C529D308C}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{A22AF606-2346-4EDE-8921-34F1E3FEB054}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='168' name='Age groups' width='368'>
      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
    </thumbnail>
    <thumbnail height='168' name='Age groups bos' width='368'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      94d5uvTvlvitLk2r8Ri+1v3zw3K0tJY+nxvPmcbzpvEcvvSYbO7z5If7/0aeG5emeWm5W/p6
      9WPHe3McY7rZs2e/VFVVxdGjR1m3bh2HDx+mXbt2bNy4EW9vb9atW0dMTMx1F6RR4zgo6enp
      5OTk0KFDBxYuXEhmZiYBAQHk5OSwYcMGTpw4QVRUFMnJyQQFBfHll1/SpUuXFql3O378OPPn
      zycxMZGdO3eyadMmTp06RUhICIsWLSIzM5OQkBC2b9+Ot7c3W7ZswWg04ubm1qz5qKioYMmS
      JeTk5BAcHExaWhrffvst586dw9fXl8WLF7N7924iIiLYsmULwcHBrF27Fg8PD5ydnZs1L9nZ
      2aSkpLBr1y7at2/Pt99+S2pqKhcuXMDd3Z2PPvqI3bt3ExUVxbp164iMjGTlypX4+/tjNBqb
      LR+7du1i6dKl9OnTh5qaGhYuXMiuXbsICwvj6NGjrFmzhsOHD9OlSxc++eQTMjIysLOzIzc3
      F71ez+7du6mvr//5A6r9gNlsZs2aNezdu5fOnTuTnp7Opk2bSEtLIyYmhuTkZNLS0qivr8fF
      xYWPPvqIXbt2ERkZSXJyMjExMXz66ae0b9/eNiJoS7BardTV1bFnzx7bcezp6UlmZiZ6vZ5t
      27bRoUOH697Otm3b2Lx5M8eOHSMyMpLPP/+c9PR07OzsKC4upri4mNOnT5OXl0dwcPB1b6+0
      tJRly5bR0NBAcHAwGzdu5Pvvv6eoqAgvLy/b8di+fXs2btxIWFgYycnJ+Pj4XHeD+NatW0lO
      TqZHjx4UFxezcOFCcnNz8fLyYuvWrWzdupWysjKcnJzYtWsXer2e1NRUOnTocF3Xq927d7N+
      /XrS0tKIjo5m3bp1pKWlUVlZiaOjI0uWLGHPnj3ExMSwcuVKYmNjWbZsGREREdc8iqztCSAj
      I4Pp06ej0WgoKSmhrKyMlStXMmTIkF9cgKu57bbbuP/++ykuLiYnJ4fOnTtz3333sXXrVvbt
      28f06dOpq6ujvLycsrIyVq9ezcCBA1vk4m82m9m2bRtBQUGYzWays7OZPn065eXlpKWl0aNH
      D+666y527txJVVUVR44coaqqqlkO6h/auXMnnTp1YsCAAbi7u5Obm8v06dM5e/YsaWlpDBgw
      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
      WLj22mvp6uq6dA+Bc3Nz0ev1ZGdn097eTn9/Py0tLRgMBoKDg+UvN3v2bHJycjCbzfIvWK1W
      MzAwgIODA2FhYVRWVlJcXIxer6elpQVXV1c8PT3p7OyktbWVgYEB0tPTWbZsGY6OjsTFxbFp
      0yauuuoq0tPT0Wq1NDQ0yNH44MGDTJw4kcrKSrRaLSqVis7OTj7//HNiY2NxdnYmPz+foqIi
      Ojo6aG9vZ2BggKlTp5KVlUVfX5+oLSsInK6S9+abb+Lg4EBAQADbtm1j0aJF3HbbbeTn58t1
      rSVJ4uuvv+bll1/m9ddfJzMzk6ioKCorK6mqqmLKlCnk5+dz7Nixs2ap3bJlC8888wwlJSVM
      nTqVbdu28de//pU33niDvXv3yheXBoOB/Px8rrrqKo4dO8btt9/O4sWL2bVrF3C6S+fNN9/k
      6aefJi4ujt/+9rfcfvvt3HLLLXz11Vfk5eWRkJBw1iywtbW19PX18ZOf/ITk5GQyMzPl89ah
      Q4eYP38+Bw8eJDExkeXLlzM4OEh9ff05j9dTTz3FmjVryM7OJjk5mebmZlpbWzl48CCLFy+W
      lztw4ACJiYkkJCRw4MABuQLgG2+8wZ/+9CfMZjNdXV1UVFSwYsUK5syZQ3p6urx+b28v/v7+
      HDx4kMcee4x169YhSRLV1dXy996/f//IBwAnJycKCwvleeGjoqLw8fGhr68PHx8fdDodGo2G
      /v5+XFxc5JO50WgkMDCQ0NBQAgICUKvVBAcH4+XlhZeXFxEREfT399PY2EhISAi+vr7Y29vj
      5uaG2WwmPj6e7du34+fnh7u7u3znkZiYiEajwcHBgeDgYJRKJXFxcezcuRNHR0dSUlIwGAy4
      uLiQmJhITk4OHh4eqNVqenp6MBgMuLq64uvrS09PD7GxsTg4OAybz14QbNVDDz3E//3f/xEX
      F8eOHTvkrpfCwkJuvvnmYYV/JElCrVajUqlQKBS4uLjg4eHBN998ww033EBbWxsnTpxg+vTp
      w/YxdepUfv7zn7Nu3To8PDzO2o6rqyuBgYHs2LGD8PBwnJycMBgMFBQUIEmSXHVv7ty5cq0N
      hUIhd/tcffXVlJeX88UXXwwrxnSGxWKhr6+PgoICAgICiI+PZ+HChWRmZpKZmcmCBQuwWCxo
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2' width='384'>
      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
    </thumbnail>
    <thumbnail height='328' name='Education' width='328'>
      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
    </thumbnail>
    <thumbnail height='328' name='Education bos' width='328'>
      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
    </thumbnail>
    <thumbnail height='384' name='Employed Gender' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWXBcV2L/9+/tFfu+7wDBTRQpDilS0pDUjMbW9pc0TkYVx38nDzOulB+y
      VPndL37Ia8pPqUqqnEoqD3E5LjszmhmJkiWRkiiSQ0oUSXEDSOw7QOwN9HrvycMBwEWUCFJo
      NMj7+1ShSACN7oNG9/ndszvGGIOIiPhOINcFEBGR3FAAiIj4lAJARMSnQrl4UNd1cV0XgEAg
      QCiUk2KIiPiak+tBYNd1CQaDuSyCiIgvqQtIRMSnNrzvxRjDqVOniMViJBIJ3nrrLS5dusT4
      +DhFRUW88sorG/2QIiLyGLLSAjhy5Aivv/46xcXFLC0tMTY2xttvv00ymSSZTGbjIUVE5BFt
      eAvAcRzm5ub44IMPCIVCFBcXE41GcRyH8vJyYrEY0Wh0ox9WREQeUVZaAOXl5fz1X/81HR0d
      DA0NrV31z83NUVRUlI2HFBGRR5SVMYD333+faDTKwsICu3fvpqamhvfff59IJKKrfxGRLSIr
      00CNMWQyGUKhEI7jfOfzu2kaqIhIbmgdgIiIT2kdgIiITykARER8SgEgIuJTCgAREZ9SAIiI
      +JQCQETEpxQAIiI+pQAQEfEpBYCIiE8pAEREfEoBICLiUwoAERGfUgCIiPiUAkBExKcUACIi
      PqUAEBHxKQWAiIhPZeVM4Fu3bnHr1i1CoRC/+MUvuHr1KmNjY5SWlvLiiy9u9EOKiMhjyEoL
      IBKJ8Nprr1FSUsL4+Dg9PT28+uqrTE1NkUqlsvGQIiLyiDY8ABzHoaWlhaGhIUZHR6mtraWg
      oIB/+7d/I5FIEIlEcF2XVCpFKpXC87yNLoKIiKxDVloAV65c4datW/zyl78EIJlM8u6771JZ
      Wcnc3BzBYJBIJEIkEiEQ0DCEiEgubHjta4zh7NmzFBQUcO7cOZaWlkgkEly8eJHJyUny8vI2
      +iFFROQxOMYYs5F3aIxhaWmJ1bvNz8/HGMPs7CwlJSXfCQDXdQkGgxtZBBERWYcND4BHpQAQ
      EckNdcCLiPiUAkBExKcUACIiPqUAEBHxKQWAiIhPKQBERHxKASAi4lMKABERn1IAiIj4lAJA
      RMSnFAAiIj6lABAR8SkFgIiITykARER8SgEgIuJTCgAREZ9SAIiI+JQCQETEpxQAIiI+pQAQ
      EfEpBYCIiE8pAEREfCorAWCMYXl5mVQqdc/niUQiGw8nIiKPIbTRd2iM4fPPP8d1Xaampnjr
      rbe4efMmMzMzhMNhXn755Y1+SBEReQwbHgAAR44cIRgMcvLkSeLxOCMjIxw9epSCgoJsPJyI
      iDyGDe8CchwHYwwffvghpaWlVFVV0d/fz40bN/jXf/1XlpeXcV2XVCpFKpXC87yNLoKIiKxD
      VrqAPvnkE/bs2UNzczMAzc3NHD58mFAoxPz8PPX19QSDQQBc193oIoiIyDo4xhizkXdojOG3
      v/0thYWFABw+fJipqSm6uroIh8O8+uqrBAJ3Gh6u666FgYiIbJ4ND4BHpQAQEckNrQMQEfEp
      BYCIiE8pAEREfEoBICLiUwoAERGfUgCIiPiUAkBExKcUACIiPqUAEBHxKQWAiIhPKQBERHxK
      ASAi4lMKABERn1IAiIj4lAJARMSnFAAiIj6lABAR8SkFgIiITykARER8SgEgIuJTCgAREZ9S
      AIiI+FRWAsAYQyaTwXXde7529+ciIpJboY2+Q2MMp06dYnl5mfn5ed555x3y8/M5e/Ysc3Nz
      vPnmmxv9kCIi8hg2PAAADh8+TCQS4dSpUywsLBCLxYjH4wSDwWw8nIiIPIYN7wJyHIdQKMRn
      n31GMBikurqas2fP8uKLL2KMWesKSqVSpFIpPM/b6CKIiMg6ZKUL6OTJk7S0tLB9+3bm5+cB
      OH36ND09PUxOTlJbW7vWGtC4gIhIbmSlC2hqagrXdenr6+Pw4cO88847uK5LcXExtbW12XhI
      ERF5RI4xxuSyAK7ramxARCQHtA5ARMSnFAAiIj6lABAR8SkFgIiITykARER8SgEgIuJTCgAR
      EZ9SAIiI+JQCQETEpxQAIiI+pQAQEfEpBYCIiE8pAEREfEoBICLiUwoAERGfUgCIiPiUAkBE
      xKcUACIiPqUAEBHxKQWAiIhPKQBERHxKASAi4lNZCQBjDLOzs8Tj8bXPp6enSSaT2Xg4ERF5
      DKGNvkNjDCdPniQSiTA0NMSbb77JmTNnKC0tpaenh7/8y78kEols9MOKiMgj2vAAAPjZz34G
      wOLiIq7r8tprr2GMYXx8HGMMxphsPKyIiDyCDQ8Ax3FIJpMcP36c3bt3U1FRQSwW48MPP+T5
      558nGo3ieR6u6679TDAY3OhiiIjIQ2SlC+ijjz7i2LFjVFZWAnD8+HFef/11iouLAQgEAgQC
      dvjh7iAQEZHNk5UuoEgkwtdffw3A4cOHiUQinDlzBoCjR49SUFCQjYcVEZFH4Jgcd8i7rqsu
      IBGRHNA6ABERn1IAiIj4lAJARMSnFAAiIj6lABAR8SkFgIiITykARER8SgEgIuJTCgAREZ9S
      AIiI+JQCQETEpxQAIiI+pQAQEfEpBYCIiE8pAEREfEoBICLiUwoAERGfUgCIiPiUAkBExKcU
      ACIiPqUAEBHxKQWAiIhPKQBERHxqwwPAGMPExAQnTpzg/PnzGGOYnJzk448/ZnBwcKMfTkRE
      HlNWWgCTk5McPnyYRCLB+Pg4X3zxBT/96U85d+4cnudl4yFFROQRbXgAOI7D3r171yr/srIy
      CgsLKSgooLGxkfn5eTzPI51Ok06nFQgiIjkSysad9vX1cfnyZd555x2i0ehaJZ9OpwkGgziO
      QyhkH1oBICKSG1kZA/j888/ZtWsXw8PDJJNJ0uk0PT09jI+PU1xcjOM4ax8iIpIbjjHGbOQd
      GmMYGhoinU4D0NDQgOM49PT00NraSlFR0T23d12XYDC4kUUQEZF12PAAeFQKABGR3NA6ABER
      n1IAiIj4lAJARMSnFAAiIj6lABAR8SkFgIiITykARER8SgEgIuJTCgAREZ9SAIiI+JQCQETE
      pxQAIiI+9cgBsLwcz0Y5RERkkz1yAPyv/+e/cKtvKBtlERGRTfRIATA6PsnU7Rn+t//rX+jp
      HyLHO0mLiMiPsK7zAK7cuEXfwDBnv77M7NwCxnjk50X5H/7mP7OtveVHFUDnAYiI5Ma6zgQu
      yM/ji7NfE1uKY4xHS2M9v3r7VSoryrNdPhERyZJ1BUBbcwOd7a1c67pFIODwP/53f01xUWG2
      yyYiIln00DEAYwyfn/maA/t28d//zX+mpqpClb+IyFPgoWMAnudxe3qOmuoKAJLJFNFoZMMK
      oDEAEZHc0KHwIiI+pZXAIiI+9dgB8P777zMzM/PA7xljuHXrFolEAoCJiQlOnjzJwMDA4z6c
      iIhssHUHQDKZZGFhYe2jv7+fVCr1wNueP3+es2fPEovFAPjss8948cUXOX/+POl0emNKLiIi
      P8q6poECXLhwgc8++2zt83Q6TV5e3gNve+jQIRzHWfu8uLiYM2fO4DgOoVAIz/PwPO9HFFtE
      RH6sdQfA4cOHmZmZwfM83njjDcLh8Pfe9u7K3/M8UqkUzz//POfOnSMej5Ofn08gEFj7voiI
      bL51dwGdOHGCxcVFXNflo48++t7bGWOYmZlhYWGB6elp4vE48XicQCBAKpUik8ngOA6BQIBA
      IHBPWIiIyOZZdwAMDw+zf/9+9u/fz82bN5mZmcF13QfedmZmhurq6rUK/9VXX6Wnp4cXXniB
      kpKSDSu8iIg8vnWvAzh16tRaP346nSYcDvO3f/u3P7pC1zoAEZHcWHcAGGO4du0a7e3tdHV1
      UVxczLZt2350F44CQEQkN9Y9CHzixAmuXLnC4uIiDQ0N3Lp1i7//+7+noKAgm+UTEZEsWfcY
      wNDQEH/1V39FfX09r7/+Ort27WJxcTGbZRMRkSxadwsgPz+ff/zHf2RmZobu7m5mZmZ4/fXX
      s1k2ERHJIm0GJyLiU9oMTkTEp9bdBWSMwXEcvvrqK86ePUsgEODXv/61BoFFRJ5Q624BfP31
      15w7d45r167x0ksvEQ6HmZ6ezmbZREQkix5pHcCNGzfo7u4mEAjwzDPP0NHRoXUAIiJPqHW3
      AHp6ejhx4gQTExOEw2GuXbtGJpPJZtlERCSL1j0GcPbsWV599VUuX75MW1sbZWVlpFKpH9wV
      VEREtq51dwHF43E+/fRTKioqePHFFzdsF091AYmI5IbWAYiI+JTWATwtjIGBYTj9FczM5bo0
      IvIEWPcYgGxxsSX47AxkXJiahl8cgeKiXJdKRLYwdQE96RZi8O11uNkH9x+vWV8LO9qhuQEi
      kdyUT0S2LAXAk8gYW/Ff7bIVv+NAezPs6oR4AkpLoH8IbvXB/CJEo/b7nW1QVQEB9fyJiALg
      yWIMzC/ApevQP2g/39UJe3ZCfh7gQDBgAwHAdWHytg2J/mHIZKCyHLa1wrY2yIveua2I+I4C
      4EkxM2e7enoHIRSCkiLYvR12dEAiCb0DMDIOf37swZV6MgV9g7ZVMDltg6K5Eba3Q0Od/VxE
      fEUBsJUZA9OzcOkaDI5AOAzlJXD0MHxzBQoK4MCzNhDmF2F8EnZue/h9zi1Ad68NhOU4FBbY
      7qFtbVBarFaBiE8oALYiY+xMnm9vwNAoRML2Sr+lEW712y6fm722om5phIJ8e2W/e4e97Xql
      MzAyZruIRsfBADVVKwPHjRDVwLHI00wBsNVMTMHFa7ZijkZgzw7b1RONwtKyHeTNz7OVfyIJ
      RYX259JpeyX/uGJL0DNgw2Bh0T52W7PtIqquVKtA5CmUlQAwxjA6OkpVVRXRaJRMJsPVq1eJ
      RCLs3r37ntsqALBX/GOTcPm6vRIvyLeV/u7OzZ++aQyMT9kWxcAwpNJQVmpbIO3NPy5kRGRL
      yUoArJ4b8Pbbb1NVVcWHH37Irl27CAaDNDU13XNbXweA58HYhL3in5iyleuenbayfZSunGxJ
      Jm0IdPfC7Rk7fbSpHrZ3QH2NHXsQkSdWVt7Bhw4dWtsszhjD1NQUhYWFVFdXY4zBGIN3/6Il
      P/E8GB6zffwTU7Yb54UDtrtlK1T8q6JR2LHNVviz89DTb8cg+odtmTtabJlLNHCcU55nn3/9
      DeQRZSUA7t8pNBgMsn//fr744guqqqqoqKi4JyB8wzMwOGxn9UzP2q0ajhyyM3C2civIcaCi
      DCr2w4G9Nry6e+FKl+22qquGznY7ZrCVAuxpl0jaC4jzF6GiHI48b0NbZJ02PACMMSwvLxOP
      x4nFYpSWlpKfn086nSYcDhMIBHAcZ63bx3XdjS7C1uO6MDBi5/FPz0J5qZ3K2dEKoS1c8T9I
      MAitTXb20XLctgp6BuDUOTj3jV2Ytr3DrlPQFekP8zy7d1MmYz9SafuRTNrKPZmyg/vJ1Mrn
      SUimIZWyH56xYzarK8OHVqYKF+Tb7sS7/139iEZsSIdC+vvIxo8BGGO4fv06i4uLOI5DZ2cn
      4XCYS5cuUVVVxa5du+65/VM9BuC60Ddkr5Ln5u1g6nO77ZXy0/Q7e55dXHaz125B4XlQW22D
      oLnhyW0VZFwIOD+8dYbnrXwY+28iaSvnZMpW5onEnf8nVyru1co9k7GvkYxr/71bILDy4djK
      OhqxH3l59vmMrHyeycCNW7Y12VRvZ4ktx+3H0vKd+199mwcC9ufXgiIf8lf+vTswohEIBO9d
      WS5PHU0DzQbXtX3lV7vsoqvKcti7y145P22/6/0Wl+wMolv9sBiz2020NduB7cryrVmZpNO2
      ksRAPGm/Nr8A5y7aKbc7t9nbrFbcqfSdijyVtpVweuUq/vtEI7bSjoRXKvLoXV+LQF7Edt9E
      I7ZyDofs18Ohh+/dlErb293/3Bpjyx1faT0sLcNyApaXYSlu/139PHNfAAWDd8pZcHc45NnA
      WP08P++Rn27ZOhQAGymTsRXf5et2Xn1VBezfY6+Ct2LFl02rU1u7e23XRDpjxxG2t9+5ur17
      7GP1ShVspWWMvaperVRTKXA9+/XESiWdzoCbsQvYEknA2PtIp+33k6k7V+bJ1J37Wb1iTybX
      //s4jq1k1yrn1avwqK28V6/II/dX7mH7+f339SiWlm2Fuxy3v2dZiX3eFmLg8Pjbft/91k+n
      7wqF+Mr/7/pY7YJK3xdygcC9XUz3dD/l2xbLakulZ8AuNKyv8d/7YYtSAGyEVMouoLp20171
      1lXD3t3QWKedN42xlW//kH2Obs/cqXiKi+5U1p4BszIzzPXu/Oz3vTydu7pmVrsp7v5aJGwr
      Sce5UwGHQ3emruZFWds8b3WtRV4EnJVuF9e103PzonD0kK3IAgF7+8AmdovMzsNXl+CVI3D5
      mn1tVVfZiv+bK/Z32P+MDaZsMSsh6rq2tRFPrLQm4neFxUprIpm8M64B9nkKBu19uK59/v/T
      L+ygdUAhkGsKgB8jnYauHjsbZjlu+73377H78OvF/V3G2BbBl+ft5y2NtoINBO5sO7FacXN/
      xb3yGlnd9TTg3Gk9rA5orvaXbxTX3dzK/vtc7YKdnXbAfX4Rntluu2HOfWMvPg7s3TqH/6wN
      ZqfutCLicbuX1eS0vY3jQE2lnTnW3vLg7ivZFAqAx5FMwvVbdvBtOW4H3/bugjo1bR9qdQ2E
      49jnLVfPV8a1rZKOFhidsC23jhZ7Jd3VY7+/oz330yrnF+2V/rZWO6A8Mw9tTTZMl+IwM2sD
      YKu/h1ZbgWWldovynn67w204bH+f7e32Akrvn02lAFgPz7N9+uEQdPXaK7JU2nbxPLfHXs3o
      hXsvYx78nGyVRUuLMbsQ7/B++OaqrYBKi+33XM9Wugf35r4Lz/NseVafL8+zr8PVAd5gaOtM
      JV6tSh40GG3Mvc+l59nuwO6VLUeSSbugcMdKq2CrtGiecgqAhzEGPv3SDmQGg7ZboKXR9vFX
      VeS+ItuKunvtYGF7s1301lBrZ0Atxuz3GursQGCuXe2yM3zmFmwXRUujnak0Nw/Tc3aQWtZn
      IQYXLsOxF+zzGgjYacDRiJ0UEQrBrm0PDtRkyj7/N3tt68AJ2NfMjg77Wglry5Fs0TP7MK5r
      uwg8A5EgvPkLW/HL92tusAfUrM64We2XH52wgfpD0yU3y9w8xJZtd1TyrnKOTdqultbGXJfw
      yVKQB5UVKzOyUnYGUCBgn9eJKTv7xzPwoAZVNGJbYNvb7aB374CdSvzJKTubqKPFhkl56Wb/
      Vk89tQAexhjbJ3yzz+7QqavCh4st2edre7vtvrjWDc/ugukZO8g7OgHPP5frUt7xfV0Xsn6Z
      jO1S29FhA3Viyvb3lxTB9Zt20Lqp/k4328N4nj3h7mavDemMa7tat3fY1uT9U2vlsSgA1uv7
      +rTlu0bG7dV/RZntSqkotVd/JUX2zVxetv6KQJ4Mi0twe9pesRtsn359jZ0ymnHttNHHWQ9j
      jL2P3pXjTGfnbZdQS6MNg5rKrT8AvoUpAGBlmtqovXrp7rVXM8/ssP3YXT12fnhnuwJAJJdW
      B45v9tktVlIpuyhuW5ttmRfk6z36iDQGALbPcjFm/397xk7pdFbmlDfX2xWMIpJbgYAdS6ip
      gkP77c66t/rhwrfwzbd2wHhHBzQ1bJ2ZUVucAgDs4FIkbJubuzrtwq6De+0c5eTqFgTY1Zci
      knuRsG2Vb2uzF283+2w30adf2sWCHa22VVBRplbBD1AXENgBq8FRaKy1fYzpjB1oSiRgasYu
      /39mh15IIltZxoXxCbu2YHjMzuCrqrCTEdqa7HYecg8FgIg8fZbj0Ddow2B2bmXguMkuNNOK
      /TUKgHXyjCGgF43Ik8UYewjTzT4bCImkXWW8vd1ur1FU6OswUAA8hDGGE723OD88yNG2do60
      duS6SCLyOFJpu6K/u892+zrYjRs72+1kj2zuqLpFKQAeIuW6/M8nPiKZyZAXCvHus8+xp6aO
      YK73iBGRx7N6hOatPjvDL7ZkB47bW+zhRbNzdp+vkqd/rYoC4CGMMfx/177l65EhCiMR5hMJ
      KgsKOdrazoHGJvJC/rtqEHlquB6MTdgVx0Ojdw4lKiqEv3gt97vBZpkCYB2MMSQzGULBADem
      Jvm8r4fBuVkKIhFeaG7lxeZWSvPyc11MEXlcqyfNffSZHTMAu93EtjbY2QGlJU/lWIECAHA9
      j5GFeZpLy3CNR//sLJ2VVRhjGF6YI57OsL2yCmflBeAZw8DsDF8M9HJjcoJQIMhz9Q0cbeug
      prBo7XYi8oSZX7SDxaUl0D9op4cbY3cn3b3d/rvFL1gfhQIA6JuZ5sLoML/as4/L46Pcmr7N
      u88+x3IqxamBXn7S0ERVQeF3KnZjDFNLMb4c6OPr0WEynscz1bUca+ugrbxCQSDypIst2+6h
      rh47tbSkyC4W7Wx/KjakUwCsONF7ixebW/mg+zqeZ3hr1zMspVKc7LuFMYZf7dn3vQO/xhiW
      0inODvbzp6EBFpJJmkrLeLmtgz21dYQCuf/9RARbiV+5AQf32Q0Kv75kd6YNhey5BeGQ3U7i
      /jrJde2ZBTdu2S3DQ0E7aLxzG1Q/uQdCaSsIoH92honFBYYX5jjS2s6lsRFuL8cI4FAUieB6
      3g9ezTuOQ1Ekyp937uRoWwcXR0c4PdjH/3PpApUFhRxpbedAQyP54cgm/lYi8h2BAEQidmuX
      vkE79XP1Gnh+0a4NeNCFXjB4Z5bQzBx03YLeIbsXUXWlbRW0Nj5xU0mz0gJYXFzkxIkT/Pzn
      P6ekpASArq4upqamOHr06D233SotgO/jrTw9j7oILOO5dE1N8tnKgHFhJMLhplZeammjOBpV
      95BILhhj9/ratQ3OX7IDv3t32f3AluN2wdiuTigsePh9JZL28JrrN214FOTbBWY7Op6YBWZZ
      CYBr164xMTHB3r17qaqqYnl5mU8++YRoNMprr712z223egD8WMYYBuZmOdXfy7XJcQKOw/6G
      Jo62tlNbVKwgENlMc/MwNGa3kW5ugKlpKCqw5xlMz9qr/x0dj1Z5G2MPObpxy04lBXv4zeqg
      8RZ+j2dtDOD8+fO0t7dTVVXFhx9+yOHDhzl//jyvvfYaruviuna+reM4hJ+wZtPjMMZwe3mJ
      Lwf6uDg6QtLNsLO6hqOt7bSXV2phmciTzhgbJN090NMPS3EbNLs6bfdR/tbbjC7rARAKhfjd
      735HQ0MD3d3dvPvuu9TV1a3d7mlvATzIQiLB+ZFBzg72s7gyYHysrYNnauoI++y5EHkqrW47
      ce2mPWMkHLZnG+/qtN1NW6RVsOEBYIzh66+/5urVq1RWVnL48GFqamrIZDJ8+umnvusC+iHJ
      TIaLYyN80d/L1FKMyoJCXmpp41BTs1YYizwNjLEBcKMH+gbsyuPaahsEbU0PHnDeRFkJgLvv
      0nEcHMdZ+9r9fd5+DoBVxhiuTU5waqCXvplp8sNhXmhu5YXmVsrz1zEYJSJbmzH2cKmbvfbY
      2dVB453b7MBxUWFOiqV1AFuIZwzD83N80d/DtckJAo7DvroGjra2U1dcogFjkaeB68LIuB00
      Hp2w3UGtjbZVUFO1qa0CBcAWNbUU4/RAH1+PDJPxXLZXVXO0rYNtFVU6l0DkaWCMbQl099qW
      QTIFleW2VbCt1S5Oy/J7XQGwxS2lUpwd6ufs4AALyQSNJaUca9vGs7UaMBZ5aqTT9kzjrh47
      ZhCNrGxEt80OGmeJAuAJkVoZMP5yoI/x2CIV+QX8tLWNg43NFGiFscjTwfNsAFzrthvRua5d
      S7CrExrr7RYUG0gB8IRxPY+u25Oc6u+lb3aG/HCYQ40tvNjSSllePp4xWlMg8jSILdn1BF09
      dlO6kiLYsQ062+yaAmN+9HiBAuAJZYxhaH6OL/p7uTIxRtAJ0F5RwWw8zmvbd7KvriHXRRSR
      jeC6doXx6qBxOGSnki7E4NmdtnXwmBQATzhjDLPxOJ/393BmsB+Akmge/9Xe5+isrNaAscjT
      whiYX7CLy7p77G6mAceeXVBeBhVlUF5iPy8sWNe5BQqAp4Trefzf35ynb2aGSCjIYjK5MmBs
      t6SOBLXxq8hTwRg4dQ76hqB2Zdro7DwkEvZIy4BjVx6XlUBZqQ2G1f9HI/d0GykAniKeMSyn
      U4QDQS6Pj/JFfy8TKwPGL7W0cbiphWgopPUEIk+61SMsV/cXMgbiCViM2TCYnbeH28/O220p
      VscLigvvCoVSBcCTJJ5Oc3N6ij01dVwYHQbg+cZmUq7LhdFhiqNR9tTU3XN0ZfftSb7o76Vn
      +jZ5oTCHm1t4qaVNK4xFtrJMBgZGoL0ZBoZtZb+9w84C6uqxV/md7Q9fJ2CM3eZ6dt7uhDo1
      DTPzNig8TwfCPEmml5cYnJvl2dp6tlVUcnqwH88YQoEA2yurODc8yJ6aOxvtBRyHXdW17Kiq
      YXRhns/7ezk90MeXA33sXVlh3FhSqhaByFazHIfJKWhtguoqe+5APA7FRVBfaxeOZTIPP4DG
      cex4QGGB3aIa7FRT14X5RQXAk6SptIyb01M4wGIyiWcMrvEIB4JMLy9/788FHIem0jL++rkD
      3F6KcWZwgK9Hhrg0NkJnZRXHVlYYa/qoyBZRUgzFxfb/6bRtAcBK189KX//j9t0EAvajqkJd
      QE+SvtlpLo+NsrO6hslYjOV0ir219cQzaYbn5/GM4ZWOznVd0cdSSc4PD3JmsJ/5hF1hfLS1
      nX31DTrDWCTXZuegqxfqa+wagETCnimwHLdHUqYzsG+3nRL6IygAnlD37676fbutPkzadbk0
      PsqX/b2MLi5QmpfH0dYODjY2URiJbmyhReTRrVbRq+/t+z//ERQAAthppLemb/NFfw89M9Pk
      h8IcaGzixZY2KvMLNE4g8hRSAMg9jDEML8xxqr+PbyfGCADP1tVzrG0bDdqSWuSpogCQ7zUT
      X+b0QB/nhwdJZDJ0Vlbxcts2tldVEXA0YCzypFMAyEMtp1KcGx7k7FA/s/E4DQ/KLPMAABjz
      SURBVMUlHG3rYG9tPZGQJpKJPKkUALJuqUyGKxNjfLEyYFyen89LLW0839isAWORJ5ACQB6Z
      Zww3b09xaqCX7ttT5IfCHGxs4khbBxVaYSzyxFAAyGMzxjC2uMDn/T1cGR/DNYaXWto41tah
      rSZEngAKAPnRVrekPj3Yx7mhQQxGh9mLPAEUALKhbi/F+HLlMPu057KjqppjbdvYVlGpIBDZ
      YrISAIlEglOnTvHCCy9QXFzM1atXGRwcpLCwkGPHjt1TESgAnk5LqSRnhwbWDrNvKi2zZxPU
      6DB7ka0iKwFw+fJlxsbGOHjwIFVVVfT399Pc3Mwnn3zCkSNHKCwsXLutAuDplspkuDg+ypcD
      vYwv2rMJSvLyCAUC/OXe/ZTm5ee6iCK+lZVJ3Pv27SOZTK593trays2bN0kmkxQUFOC6Lq7r
      AnbvGgXA0ysSCnG4qYUDDU10357k41vd9M/OAPDvVy/z845OWkrLtROpSA5kbQzg/PnztLe3
      U1VVxblz50gmkxw5coTAfW90tQD8ZWRhnv/jq7MYA67xSGYy1BYVc6ChiZ80NKpFILKJNjwA
      jDFcv36db7/9lpqaGp577jn++Z//mYMHDwKwf/9+8vLy1m6vAPAXYwxpzyWAg2sMVybG+Gpk
      iP7ZGRxgR1UNh5pa2F5VpXOMRbIsKwGwtLS01sVTUFBAPB5f2664qKjongpfAfD08Ywh5WaI
      BkMsJpNEQkHyQmGMMcwnEhRHo/d0+RhjmFqKcWF0mItjI8zG45Tm5bGvroGDjc3UFhUT0Awi
      kQ2naaCy4b4c6COZybC/vpHu25NMLy/x1q493Lw9xcjCPKFAgKNtHQ/82bTrcnN6iq9Hhrg+
      NYnnebSWV3CgoYl9dfXkhcKaTiqyQRQAsuHSrsufhgY40trO5fFRMp7HwcZmzg72s7eugT8N
      DfCLbdsfej+LySTfjA5zYXSYscUFIsEg++oaONDYRHt5pVoFIj+SAkA23M3bU3w7Mcq+ugYu
      jY3yXH0jQcdhOZ1mPhHHNR7H2rat+/5cz2N0YZ7zI0NcmRhjKZWiurCIg41N7K9vpCwvX60C
      kcegAJANNxe3lXxeKEwikyYUCBAOBskLhZheXqY8L5/QY/7N4+kU1ycnOL8ycBx0AmyrrOT5
      xhZ2Vldr4FjkESgA5IlkB46XuDA6xDejI8wl4pRE89hX38Dzjc3UF5fkuogiW54CQJ54rudx
      c3qKr0aG6JqaJO26NJWWcaiphWdr63RWgcj3UADIU8MYw2IyyeXxUb4aGWJ8cYFoKMQzNXUc
      amqhpayckFYci6xRAMhTyTOGoflZLowMc2lslHgmTXVhET9paORAQ5MGjkVQAIgPJDMZrk6O
      8/XIEL0z0wDsqKrmYGMzu6priej1l3VD83Oc7L3FjqpqDje1KHy3CAWA+IYxhqSbYWxxgfPD
      g1yfnCDjeVQWFHKwsYl9dQ1P3F5ES6kkX40MUVdUwo6qahzHIeO5uJ59W6fcDACuZ3CNt/Iz
      qZUtOTwSmTQA8XQa1/NwjSGeTgGQyGRIr6zoj6VSa/eXWvtaEmMg47kkMpkfLGfG9XCNhwO8
      0rGdl1raKLlrSxjJDQWA+NZSKsXViTHOjwwxPD9HKBBge2U1h5tb2FZRhWcMwUDgscYNPGPW
      tj9xjQEMxrD2teXMSoXrecTTthJOZDJkPBdjYCltK+mU665V4kupFAZb4cbT9muTS4vcXlrC
      cRzK8vJwcMh4Hp7xMLBWga9W7g/iwNoVeXDlX8dx1r5WGI4QcBxCgQB54TAA+aEwwUCAgONQ
      ELFfywuFCQcCODgURiIAhINBoqEQY4sLnB3spzAS5fZSjHAwyE8amjjS2k5VQaFaBDmiABAB
      xhbmuTA6wjdjwywmk5Tm5ZF2PQojYV5u20bKsxXp6pWyZwzL6TRgSKRtxe0By6uVtOuS9lwM
      kEinMdhKePXq+VHlhUIEAwEcoGClco0GQ8TTaW4vLxF0AuyuqSEaChEN2gq5MGIr7mDAIT+0
      UkmHw4RWKu7C8J1KOhQI4jis3S4UDGz4mgrX8wgGAowvLvDlQB/fjA7jGcOumlpebttGW3nF
      hj6ePJwCQGSFMQbXGG5MTXCi5ybDC/P3fD8UCKxVwtFQaO1roYB9/RZGIjg4hAIO+SuVa344
      TNC590o5GgzZcQfHoejuK+WVCrcgEiHoOAQDgbUK2QFYvTq/q0wp1+Xy+Ci1RcU0l5bl7Eo6
      43l0TU2yq7qGxWSS2fgy7RWVAEzEFsl4Ho0lpWu3X52xdWawn3PDg8RSSVrLyjnWto3dNTVr
      z6lklwJA5AFGF+b5f7+9SEk0yl88s5dwMEjQcQg4tjtotVsosFJRZ9PqW9RxHIwxa5X83V/P
      tdtLS3zWd4tf7n6W3plpBudnebVzJwDnhgYBw+Hm1gf+bDyd5pvRYb4c7OP20hI1RUUcaWnn
      ufpG8le6nCQ7FAAi38Mz5p7+8VyYjS/z0c0u3n12H9cmJ5iLx3m5fRvGGD7tvUnadXm1c+eW
      OFHti/5eXmxuJRwMcqL3Jj9v7wTsYPGNqUkONbX84M9nPI9rk+N80d/L4NwsJdEoLzS38kJz
      K0WR6JYIuqeNNk4R35qNL1Oal89yOsV8IkFDcQmO4zC1FMMBqgqLcl1ECsIR6opLMAa2V1Zz
      dqgfsJVlOBCkqqCQ2fhyzss6EVtkenmJrtuTeMYwG48zPD9HynUZjy0ys7zEUiq1Njj8IKFA
      gH11Deytrad/bobP+3r4pOcmn/X1rA0Y1xYVb+Jv9fRTAIgvTcQW+aDrOv/N/oOc6u+lIBwh
      FAhQnl/A+eFBHMfhlY5O8kK57YIIOg6u55LMZAgFAqRc+/9kJkMikyaQdAhvgQ3waouK+S+e
      2bv2+b66hrX/b6useqT7chyH9vJK2soqmFyKrQ0YfzU8yM7qGo6tDBhrO/AfL/evHJEcqC0q
      XquYIsEg2yor7ZV0QSEZz2M5lWI5lcp5AMwnE5Tm5TMRW8Q1hsqCQuYScTxj6KysJpnJUBJ9
      Ovc6chyH2qJi/stn9vJn27bzp6EB/jQ0wP9+7jRt5RUcbW1nd02tBox/BI0BiC9NLcX46GYX
      z9U3MLa4QDKT4UBDE/GVMwvGFhd5fccu7R20xSQzGS6MDvPlQC9TS0tUFRZytLWDAw1NazOz
      ZP0UAOJLdy/UWl09Gw4E1xZPrU75lK3J9TyuT01wqr+XvtkZCiMRXlwZMH7SVnPnkgJARJ5Y
      njEMzM3wRV8vN25PEnQc9tc3rg0Ya+bQD1MAiMgTzxjD5FKM0wN9fD06jOd57KyuWVthrCB4
      MAWAiDxVFpMJzg4O8KfhARaTSVrKyjnW2sGe2jp1690nKwEwMTHBp59+yptvvklZWRkXL15k
      aGiI8vJyjh49es9tFQAikg3JTIZvxkY4PdDLZCxGRUEhR9va+Ul9k1YYr8hKHMbjcZqbm8lk
      MhhjGBgY4O2332ZhYYHUyrayIiLZFA2FeLG5lf/ppZf5b3/yPMXRKO9du8L/cuoEx7uvM5+I
      k+MOkJzLyryptrY2pqamAPA8j7y8PBzHobKyksXFRcrKynBXdkV0HEctABHJmnAwyLO19Txb
      W0/fzDSnBvr4rK+HLwf6eK6+kaOt7dQVl+S6mDmR9YmzgUBg7ap/YWGBwsJCgsHgWqXvPub2
      uCIij6q9opK28gpuLy9xqr+Xi2MjfDU8xK7qGo61ddBeUYFnjG8Wl234GIAxhq+++oquri7K
      yso4dOgQN2/eJBaLAfDGG2/cc3uNAYhIriwkEpwfGeTs4ACLyQS1RcUspVI8W1fP4aYWCsIR
      ggEHcO7ZAXZ1G4rwE153bcosIGMM6XSacDj8nelYCgARybVkJsPFsRHe77r2wOMtHSCystI4
      HAgSWgmFvNWvrZx8BnYDv9UT1FYHm/NC9iAex4HCcHTlayFCwSAO3HsuxMr9FEaidjda+M5Z
      EJNLMa5NjrO3tv5HbQSoaaAiIitO9trdR3dW1bCrpha4c4Zy5q4zlJfTabyVYzaX7zpDOeN6
      GAyJTBpjIO25ZFx7FnN85WcfVdBx1o7izAuFCAUCzMbjpFyX6sJC/tPOZ2guLaf4MfaEUgCI
      iKwwxpBe2RbkcRePGWPwVqpVzxgMK2dDe/bfe4IklcI1Bs94K0eM2tZI2nUxGGIr46fplV1g
      wZ4X3T87w1IqRcBx8IwhHAhQU1RMW3kF7eWVtJSVURzNe+iOqQoAEfEdYwzXJie4vRzjpeY2
      IqEQfxoaION5vNjcuuUXjN1eitF1e4rOyipiqSS9M9MMzM4yND9LYmXr8OrCIlrLK2hf+SiO
      RtdOtFulABAR3zHGcLz7Bruqa0i5Ljuqqvmg+zqRYJAjrR1baqHY6lnV69mZNuVmGF1YsIEw
      N8PA3CzxdBoHqCkqZltFJdurqmkrq6AgEtF5ACLiT9urqrg4NsIzNXWkPW/lqw6Ztf/nnjGG
      j291k3Qz/LSlndK8PL4c6OPW9G3+630/+c4Ja5FgiLbyCtrKK9aCY3xxgZ6Z2wzMznJxbJTT
      g/0EHYe64hIFgIj4j+M4JDIZKgoKaSkrp3fmNsXRPDxj1mb2bBUpN0NRJMrY4gIVBQW80NxK
      2nN/8HhNsL9jyHFoKi2jqbQM2iGRTjOyOE/fzDT9szPqAhIR2cpGF+a5OjnO7upaQoEAIwvz
      NJaUUVf8489HVgCIiGxhowvzuJ6hsaSEuUQCg6Eiv2BDtrhWAIiI+NTWnuskIiJZowAQEfEp
      BYCIiE8pAEREfEoBICLiUwoAERGfUgCIiPiUAkBExKcUACIiPqUAEBHxKQWAiIhPKQBERHxK
      ASAi4lMKABERn9qUAEgmkwwMDLC8vLwZDyciIuuwKQHwu9/9jqWlJX7729/iuu5mPKSIiDzE
      phx+mZ+fT15eHvn5+YA96Hj1HJocn0cjIuJbWQ8AYwyO4zAzM4PjOHiet/aviIjkTta7gDKZ
      DJlMhoMHD1JSUsLCwgKBQIBQKEQoFNqQcy1FROTRZT0AwuEw27dv56OPPqK4uJjKyspsP6SI
      iKyDDoUXEfEprQMQEfEpBYCIiE8pAEREfEoBICLiUwoAERGfUgCIiPiUAkBExKcUACIiPqUA
      EBHxKQWAiIhPKQBERHxKASAi4lMKABERn1IAiIj4lAJARMSnFAAiIj6lABAR8SkFgIiITykA
      RER8SgEgIuJTCgAREZ9SAIiI+NSmBIAxhtnZWRYXFzfj4UREZB1Cm/EgZ8+eJZPJEA6HefHF
      FzfjIUVE5CE2JQDGx8c5ePAgpaWlgG0RiIhIbmW9C8gYw+TkJLFYjOPHjxOLxTDGkMlkyGQy
      eJ6X7SKIiMgDZL0F4DgOtbW17Ny5k8XFRWKxGEVFRQQCNntc1812EURE5AE2ZRD44MGDHD9+
      nEQiQW1t7WY8pIiIPIRjctwh77ouwWAwl0UQEfElrQMQEfEpBYCIiE8pAEREfEoBICLiUwoA
      ERGfUgCIiPiUAkBExKcUACIiPqUAEBHxKQWAiIhPbcp20D/E8zxtCCcikgM5DwBjDJFIJNfF
      eKhUKqVybpBUKkU4HMZxnFwX5QepnBvrSXhtgr/KqS4gERGfynkArJ4LsNWpnBvnSSgjqJwb
      TeXcWBtRzpxvBy0iIrnxZESdiIhsuC0TAK7rkkql1g6MT6fTZDKZte97nrf2PWMMqVRqw2cP
      GWNIJpNr5xR7nkcymbzncVcfc7UM6XR60w+5f5RyrspkMptazvv/RqtlvrsMd5dx9YzozZ4R
      9qjl9DyPRCKx6WdZP0o5Pc97Yp7PTCZzz/t+K5cznU5vahnXU87764LVenS9cj4LCGBwcJBL
      ly4B0NbWRm1tLadOncIYw5//+Z8zNzfHRx99xC9/+Utqamo4ceIEmUyG+fl53nnnHfLy8n50
      GTzP4/e//z35+fkkEgneeecd/vCHPxCJRKiurua5557j5MmTzM/P8+6779LT00Nvby/JZJJd
      u3axffv2H12GH1vOmpoa9u7dy2effcbCwgK/+tWvAJifn+ef/umf+Lu/+7tNOX3NGMOnn36K
      67prf6MzZ86QTqcJhUL84he/4OzZs1y7do2/+Zu/wXVd/uVf/oW6ujqamprYuXNn1st4fzkX
      FhZ45513OH369D3lPHPmDDdu3OA3v/kNxhjef/99CgsLaWho2NRyfvLJJxhj1p7PL7/8kkwm
      Qzgc5pVXXuH06dN0dXXxm9/8htHRUbq6uvA8j4WFBd59990tUc6f//znnDlzhu7ubn79618z
      MzPDyZMnKSwspLq6mgMHDmxaOT/++GOAtXKeOnUKz/MIh8P87Gc/u6eck5OTnD17FmMMBw4c
      oLm5OSfl/OUvf8nnn3+OMYZwOMyxY8d47733KCwsJJPJ8Gd/9mf8/ve/JxKJsG/fPtra2h76
      GMF/+Id/+Ifs/hoPl5+fzzPPPENdXR03btxgbGyM1157jYaGBq5du0ZDQwNFRUUUFBRQXFxM
      c3Mz27dvZ2JigoqKCgoKCjakHNu2baOzs5OrV69SUVGB67q8/PLLXLhwgfb2durq6piYmKCz
      s5OKigo6OjqIRqNMTk5u2ovi/nKWl5djjFkrZ0dHB3V1dYyPj9PZ2YnneXz66adUVFTQ2dm5
      aQNcq3+j8fFxKioq6O/v580336S7u5vm5maKiopYXFyks7OTmZkZMpkMx44do7q6elPKd385
      x8bGqKioYGBggDfeeIPu7m5aWlruKWdvby+FhYU888wz1NfXb+q0y5aWFjo7OxkdHaWiooLB
      wUHeeOMNurq6vlPOkpISOjo6SCQS1NTUbOpz+kPlbG1tpaioiIWFBTo7OxkcHKS0tJS9e/dy
      48YNOjs7N72cIyMjVFZWMjw8zOuvv86NGzdobW2luLh4rZxnzpzhlVdeYefOnZw5c2bTLvbu
      Lufw8DCVlZWMjIzw2muvrZVz586dbNu2jatXr5LJZNixYwcHDhzg7Nmz6yrnlugCCofD9PT0
      8Omnn3L06FFc1yUajVJYWEgymaSysnLtzeY4Do7j8PHHH1NSUkJFRcWGlMFxHFKpFL///e/Z
      v38/y8vLlJSU4DgOoVCIcDhMSUnJ2u09z+Pjjz/mgw8+2LQrwbvL+d57762rnFevXqWjo4NI
      JLJpzezVv9FHH31EWVkZxcXFa620oqIiEokEVVVVa7ePRCKkUik++OADvvrqq00p4/3lrKio
      oKioaK2chYWFxOPxe8o5MzNDT08PFy5c4OOPP9705/PDDz+ksrKSwsLCH3w+wb4+u7u7N/21
      CfDhhx9SVVVFQUEB+fn5gH0+7y9nfX09ly5d4vjx4zQ1NeWknNXV1eTn599TztU6Z9XOnTs5
      fvw4p06dYmFhYdPLefz4cWpra8nLy1srZ0FBAalUikQiwXvvvceBAwdYXFykvLycUGj9HTtb
      ogtobGyMGzdu8Bd/8RcEAgEikQixWIxYLEZhYeE9t11tFu3evZvW1tYNK4Mxhj/+8Y+8+uqr
      lJeXc/v27bVmdDqd/s7V3mr31Msvv8x//Md/8Pbbb29YWR5Wzj/84Q+8/vrrlJWVMTU1RXd3
      N9u3b39gOefm5kin0/T09FBRUcGhQ4c2pYwfffQRe/fupbm5Gdd1icfja10D97fY8vPz+fnP
      fw7AH/7wh6yX7+5yfvjhhzz33HM0NTXhui7Ly8sYY1hYWPhOOcvLy8nPz2fPnj388Y9/zFk5
      M5nMPeVcrRTu1t3dvaktvrvL+ZOf/ITGxkbS6TRLS0sYY1hcXPxOOS9evMhbb71FeXk57733
      Hs8++2zOy/mg57OpqYna2lqWlpa4cOHCppRxtZzHjx/n4MGDNDQ0kEql7nk+o9Eo//7v/85b
      b71FcXExsViMiYmJR1oUuCW6gLq6ulhYWGBwcJBEIsHu3bv55JNPGBkZ4ac//SlXrlyht7eX
      qakpCgoKuHnzJktLS/T09FBdXU00Gv3RZYjH43z77bfMz8/T29vLs88+S1dXF9evX2f79u2E
      w2FOnz7N5OQksViMmZkZLl68yK1bt9izZw/l5eUb8Eysr5xXrlxZdzl/+tOf0tHRgTGGgwcP
      bkqF4Hke33zzzdrfqL6+nuXlZS5dukRlZSWNjY2cPHmSyclJpqenCQaDfPnll2tXrPdfzWa7
      nLFYbK2cS0tLXLp0iaqqKurr6/nss8/Wyrlnzx4uXbrErVu3aGpqoq6uLmfljMViXL58+YHl
      bGhooLu7mwMHDmxqALiuy8WLF9fK2djYyOLiIpcvX6a6uvo75dy9ezenT5+mt7eX9vZ2ampq
      Nq2cdz+fjY2NLCwsrJWzrq5urZwzMzMUFBRw+vRp+vr6OHLkyIbUN+st593PZ1NTE/Pz81y+
      fJmamhrKy8u5du0as7OzDAwMcPDgQU6fPs3Nmzc5dOgQRUVFD32MLbsOYLVYuVzebozBGPO9
      byLP89aa57n0sHJuBatl/L7nayv8vVfL8bBy/tD3N8tWKcfDrPf5zPVr92Hl3Grv9Y16H23Z
      ABARkezaupeMIiKSVf8/AlS+HwMH6fAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='48' name='Employment' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAA60lEQVR4nO3XsQ2DUBAFQbAc0Y17cIUu9qfnIkAQ7EwBT5etbp+Z2QDIeT19AADPEACA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiDodgLXWFXcA
      cDMfAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARL2vGPn8vlfMAHAjHwBAlAAA
      RAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAEDU
      PjNzZmCttR3HcdU9ANzEBwAQJQAAUX8YnQ9CdU0q/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='48' name='Employment (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAA60lEQVR4nO3XsQ2DUBAFQbAc4Rrcfwnu7KfnIkAQ7EwBT5etbp+Z2QDIeT19AADPEACA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiDodgLXWFXcA
      cDMfAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARL2vGPl9vlfMAHAjHwBAlAAA
      RAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAEDU
      PjNzZmCttR3HcdU9ANzEBwAQJQAAUX9vxg8aeKr4VQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='48' name='Employment bos' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABEElEQVR4nO3XwUkEQRBA0V7xNDC5eTY8U2zoa5uAnnZ0Fv57ARQFdfjUY++9BwA5b3cv
      AMA9BAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAop4O
      wFrrij34A3POMee8ew1+4T6vrXAfHwBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQNT7
      FUM+vz6uGAPAP/IBAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQA
      AEQJAECUAABECQBAlAAARAkAQJQAAEQ99t77mQFrrXEcx1X7cKE55xhjjPM8b96En7jPayvc
      xwcAEPUNJUwpnYm/ku0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='48' name='Employment bos (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABFUlEQVR4nO3XMWoEQQwAwTnjaGEjP8eP9uMGNh2nzm/OC9dVDxBCSaPHWmsNAHI+7l4A
      gHsIAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABEPR2A
      67p27MEfc84x57x7jbfhnq/hrnvdcU8fAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBA
      1OeOIT9f3zvGAPCPfAAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQ
      JQAAUQIAECUAAFECABAlAABRAgAQ9VhrrWcGXNc1juPYtQ9jjDnnGGOM8zxv3uQ9uOdruOte
      d9zTBwAQJQAAUb/MdzIAhjG7sAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='48' name='Gender' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAA6UlEQVR4nO3XsQ3DQAwEQctwpP5jx67wU7oIPaRgZwo4MFvwmJl5AZDzfvoAAJ4hAABR
      AgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQdTkAa60ddwBw
      Mx8AQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABEfbasfH9bZgC4jw8AIEoAAKIE
      ACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAg6piZ
      uTKw1nqd57nrHgBu4gMAiBIAgKg/D8oPgbsMPOgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='48' name='Gender (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAA60lEQVR4nO3XsQ2DUBAFQbAc0bALc+LKfnouAgTBzhTwdNnq9pmZDYCc19MHAPAMAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAqNMBWGtdcQcA
      N/MBAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBA1PuKkc/ve8UMADfyAQBECQBA
      lAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAETt
      MzNnBtZa23EcV90DwE18AABRAgAQ9Qe+zhAdcTB4gwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='48' name='Gender Bos' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABEElEQVR4nO3dsWnEQBRF0VmHAvXfgmO3NjDpuAM7WLFC3HMKEA9+cJlIr733HgDkfN09
      AIB7CABAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARL0d
      gLXWFTseZc455px3z+Af7vQM7nQfLwCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgKjX
      3nu/84G11ji+f67aA8CHeAEARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABE
      CQBAlAAARAkAQJQAAEQJAECUAABECQBA1DW/hDyOq/Y8wpxzjDHGeZ43L+Ev7vQM7nQfLwCA
      KAEAiPoFtrgwkOKVlz8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='48' name='Gender Bos (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAAwCAYAAAAYeq1+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABEUlEQVR4nO3XsWkDQRBA0ZVxdHD1ujAl7mvh0nUBCnXyCf33ChgGJvjMba21BgA5X1cv
      AMA1BAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAop4O
      wHEcZ+zx1uacY8559Rq8mDt/Nvd95AMAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIj6
      PmPIz+/9jDEA/CMfAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJ
      AECUAABECQBAlAAARAkAQJQAAETd1lrrmQHHcYxt287a5y3NOccYY+z7fvEmvJI7fzb3feQD
      AIgSAICoPwzoKjO2gWhZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Race' width='384'>
      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
      pUycdhev9G2lYOR5pe8HVLkCvNz3BJZlAjAfn2R0qR9dt5f1AAKQyEZQKOy6g+0DT2JaBi+f
      epw3Bn+MaRVL407PHWQqOsxcfJxTs/vLmunkzAEKRo7F1BxHpnZzfGYfi8k5opkQ+8d3lMYF
      EzPUehrYO7adxdRcWTMtJWeoctUwERnkdPAQkXSQF09+hyOTb1ww7sjkmzjsLo5P7yaYmCxr
      psXkNH53LWOhAQaDRxkPDzIwd4hUPsb+sdfeMW6GGm8De8++RCS9UNZMC4lpqt11jCye4kzw
      GKOhfgaDR4lnI/x8bHtp3J6Rl3m57wdEM+XNA3Bo6m0UivHICKfmDnNsZj+zsUkKRoE3hl4E
      lo8T+8d34rZ72Dv2BgvJ8u5PByb3oAFnl4Y4NX8M+wd9oaZp3HrrrSwsLDA3N0draysAQ0ND
      7Nu3j1QqxVe+8hWOHTvGyMgIvb29ABQKBbZu3coXvvAFPB4PR44c4ciRIwB8+ctf5plnnsEw
      DO666y46OjoIh8M0NDSQTCbJZrPs3r2beDzO2NgYu3fvRinFpk2bmJ+fxzAMnn32WXK5HLfc
      cgvHjh0jHo/T2trKxo0befHFF9E0jQ0bNnDbbbeV8t5yyy309fVx++238+STT2KaJqFQiMbG
      RqLRKN/85jd56aWXSCaTtLe309LSwpkzZ0gkElx++eV4PB76+/t5++23aW1tpbe3l/3795NK
      pfjqV7/KT37yE+x2O5FIhD/90z/F7XZ/zB/jh9NQ1UYiG2Vk8SSrGzYSz4Zp8q+gt+VKhhdO
      kMonqPbUEssskTOypHIxuurXlzVTo7+dRC7C2aVTdDVsQNds3L3pK7x08h8vGDcdHeG6rrvQ
      NJ19oy9z2YobypbpUytvomDmee3006yo6SKYmKbJ305bYBWvnX6mNK6naTOn549itzkIuGvL
      lgegq2ETg/OHSOfjtFSvIuBp4P4tj/D66R9eMO7mns+TyEU4Ob0Hr7N8V24A3Y2b6Z87SKaQ
      pLm6g/65g1y58mbaAp385OjfXTDuTPAoLruHKldNWTP1NG2mb+4g2WKa5uoOTs7s5aqVt9Ds
      X8Gzxx/jM9wNwPWr7yxrjne6YfXtZIsZhhb6Cbhr0TSN8fAIeTPHikBnadzd6x8knFnCmCzi
      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
    </thumbnail>
    <thumbnail height='384' name='Race bos' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzaeZQc5Z3u+e8bkWtl7VWqklSlXUISWlAhCSEEMptYxGIwXHDbxjbeutv3
      uO+5fc5d5s6cGWb6es7tO93TPbevu9vttsG03ULYgEEsAi0ItJd2qVSqUu2qLWvNyso9MyLe
      +SOlAgzY2E5J2PH7nMORKuvNiEeRkfHE+wZKa60RQgjhOsbVDiCEEOLqkAIQQgiXkgIQQgiX
      kgIQQgiXkgIQQgiXkgIQQgiXkgIQQgiXkgIQQgiXkgIQQgiXkgIQQgiXkgIQQgiXkgIQQgiX
      kgIQQgiXkgIQQgiXkgK4gmzbvtoRhBBiihSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4
      lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4
      lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4lBSAEEK4
      lBSAEEK4lBSAEEK4lOdqB/i0syyLnTt3snLlSmbOnPmB3/X19RGJRFixYsVVSvfxso0HyB14
      FxyHwONPYEyfQe7gPqyONoq+8s2pcckf/xN6MopOJfHf+yDeFQ0FzWH395J+8Tl0Jo1v4x14
      167Hbmshs/0Vir71Z6hAEACdSZPa8gzO+Bj+TZsLn6O7DXv/TnQuh/fuh1HBELk3fpb/+Z7P
      YdTkP1v77HGso/tRFVV47/88yijcPZKTiJP4wT+gUym8y1YQfPBhUttewjrbhCotJfSNP0X5
      fFhdnaRe3IrOZglsugffmnUFywCgtSb7i+dwBvtQJaX4P/8kemSIzC+2oAJB/H/0dVSwCO04
      ZF/eijM0gDl3Ad67P4tSqnA5bBun+Rg6EUNV1mBeswK7/Sx6YhSUwly1AWWaaMdB93WiJyOY
      y9cWbP+XOKNDWLu3odMpPOtvx5i9gNxrW9GJGJ4NmzDnLwbAOn4Au+UUShl47nkEo6K64Fmu
      NPOpp5566mqH+DQbGBjg4MGDRCIRrr32WmKxGOfOnUMpRSAQwDRNfD4fLS0txONxKioq6Ovr
      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
      FIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriU
      FIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriU
      FIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriU
      FIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriUFIAQQriU
      FIAQQriU+dRTTz31SQZ2dHTQ2trK+Pg4lZWVjIyM0NPTQ01Nzce+5+DBg0ybNg2Px/OJA2mt
      aW5uJh6PU1FRgeM4vPHGGwwODjJnzhwAHMfh8OHDzJw5E6XUJ972pfc2Njbi9/sJhUK/0XsB
      urq6SCaTlJaW/sbv1VpjGFemc7PJGBMXWkmODeANlWJ6fGjtEOlqQplePP7g1Nj05DiT/R0E
      yqp/4+P56+hMCqdxD7rpCPj84PHgvPs6uvMcuvs8asYclMeLnhjDObgLff4MqnIaKvibfza/
      ykRmjBMjB+mJtVMZmIajbU6OHKJtopmgp4hibylaa85PnOHc+AlyTpYKf2GPh3Yc9OnDOGeP
      QS6Lqq5FT4yhD7+N7u2A+nmoi+eHti304bfB60MV/+bn2q/MoTUtkSb29u+kP97LnJIFxLOT
      bL/wMr2xLuaUzMdQJlprjg4f4HB4L1knR21wRkGPh+3YHAq/w5Hh/eScHLVFM0nkYhwI76HC
      X03AE5jK2xPr4Nz4aWaVzC3Y/i/RWtM63kzreDOzS+diORZvdW3jaPgQVcFplPjyx//d3p00
      Dh6gefQUWkNNaHrBs1xpn/hqdPDgQQDC4TAvv/wy0WiUgYEBcrkcvb29DA8Po7XGsiy6u7uZ
      nJykvb0dy7KYmJggl8sBYNs2XV1dRCIRtNZEIhGi0SiZTAbIX6B37drF9u3b0VrT2dlJd3c3
      y5cvJxKJkEgkSCQSBIP5C1gikaCrq4tsNsvExATd3d2k02kymczUz6lUaurfMT4+zv79+9mz
      Z8/Uz8PDwwwPDzMyMkI4HEZrTTKZpKOjg0wmQyqVIplMMjIygs/nw+v14jgOfX19jI6OfugY
      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
      O5WVlaTTaZYsWUI4HGbVqlUMDQ3R39+Pz+ejsrKSUChEZWUlANlslmQyyZw5c8hmsxw7dox0
      Oj217PPqq68yNjbGjTfeyPHjx4lEIixYsGDqIfMVfQg8PET2wLvobJbA5gfBstC5HM7QIDoR
      R5WWgWXhW3cTuYP78Cy9Fs/KhqmHf4VixVP0vbiLiVOtXPPvvkTJNXMw/F4GXn6bWY/eTfHC
      2cTaeihdNIfBN/bhZHMs/JPHMQO+guawBwdJ79mDtixCDz+MzmZJvf02dm8vxY89hj06ilFW
      hjIMnKEh7IEBvIsXTz0cLkwIh8zBfeSamwjeex9mTQ06lcIZH8MeHMAzYyb24AC+61eDYZBt
      PEzRw5/DvBw3EZkkxCbR4yOoimqMBUuxzx5DoTDX3IIeDWNMn43yB7CbT2CuXIeqmVHQ80Pb
      Nond75I+eZqyf/MQ/gXz8C9ehP+ahZgV5QRWLifT2kbopnUAJPcfouJLj+OpLPDxyKbBsmAy
      AraFUVOHKirF6WzGWNoAPj86lcg/9C0qxnjfstDvO6Wv5pPKX+P90S7dYb//51/3vveP+eXX
      PmrMR+3zk2b75W1+1PZt256aaQghxNX2qS6APzRSAEKIT5NP7TMAIYQQl5cUgBBCuJQUgBBC
      uJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBC
      uJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBC
      uJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBC
      uJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBC
      uJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBCuJQUgBBC
      uJQUgBBCuJTnage4cOECPT09AHi9XtauXYtpmlc51e8/Z3gA58g7YOUwb7kXQsXY774BqQTG
      9Rsw6ufnx3U0YzcdRfkDmLc9gPIHC5pDJxNY77yOjoxiXn8TxjUrsN99A2ewF3PNLZiLluVz
      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
      LQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Story 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANbklEQVR4nO3cz28c9f3H8dfu2iSOHf9KTKjiIgsHSGiVKIRyKLT0UKFUlBOXSkiIHBAS
      fwX/BBKHcMmh0ENVqWrUCqlSQBBFIsQpTX9gaCgQk+ASE2PHWa9/7PeAsMT3SwN8W5qk78dD
      smzN7sx+dnZ2njvr0TS63W43AJTTvNYDAODaEACAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoKieaz0AuJrV1dV0Op1rPQxuYM1mM61WK5988sm1
      Hsp1RwC4rq2urqbdbl/rYXAD6+npSU9PTz7++ONrPZTrjq+AAIoSAICiBACgKAEAKEoAuCF1
      u92Nn29y+V9mZWXlqvf7JsfIv0e32836+vrXfp3W1taueobaV13m1R5/fX09y8vLX3lM6+vr
      X+u5CAA3pJdffjlTU1N5/fXXvzQGXzT93LlzWV9f/6fLf+211/Lmm29+6Tj+8Ic/XPX2d999
      90uXwbX129/+NkeOHMkzzzyTmZmZJF+8zfxvMzMzefXVVz83rdPp5PTp00mSN954I5cvX/7S
      5b300kt57rnncvjw4Y3t6bP7X7x4Mb///e+/8pgOHz6c559/Ps8+++xGOK72vnAaKDekvr6+
      3H333Zmamsr8/PzGzvq73/1uZmdnMzExkbfeeisDAwM5f/58BgYGMjQ0lLm5uSTJ2bNnMzs7
      m9HR0QwNDWXLli05f/58JiYmsra2lmazmUuXLqXb7eYvf/lLlpaWsra2lnvvvTenT59Op9PJ
      HXfckSRpt9u5cOFCJiYmMj09nW63m8XFxYyPj2dtbS3Jp6FYWVnJrl27Mjw8fG1WGl9ocXEx
      jzzySNbW1vLiiy+mp6cnly5dyoEDB9Jut3PmzJmsrq7m8ccfz4kTJ/LAAw/k2LFjue2225Ik
      p06dyp/+9KcMDg7m5ptvzq9+9atcvnw5vb29aTQaOXr0aGZnZ7Nnz54MDAzk+PHjuXLlSh57
      7LGMjIzkypUr+clPfpLl5eX88Y9/TF9fX44fP56RkZF8//vfT5JMT0/n5ZdfTn9/f+67774s
      Li5mcXExa2trGRkZycDAQMbHx9PT05NHH300L774YmZmZjYe68c//nGmp6fz4IMP5tixY7nr
      rrty9OhRRwDcmObm5nLy5Mkkn37K3rt3byYnJ3PhwoXMzs5unPP91ltvZWxsLB988EEWFhay
      vr6ePXv2ZOfOndm3b1927tyZ6enpnD17NiMjI0k+PTrYtGlT2u122u12rly5kgMHDqS3tzfd
      bjcjIyO56aab8s477yRJNm/enJmZmczNzaXRaOTSpUsZGhrK9u3bN8YxPz+f7du3Z3Bw8Bqs
      La6m2+3mhRdeyM9//vMcOHAgy8vLOXToUE6ePJnZ2dk88sgjuf/++3Pq1Km89957SbLxO0m+
      9a1vpb+/PydOnMi+ffty77335r777sv58+ezsLCQS5cu5fHHH8+ZM2dy8eLFPPjgg7n//vs3
      jjbW19fz61//Or/4xS8yMTGR3/3ud9m9e3emp6c3jiBeeeWVHDp0KCMjI2m323n99ddz9uzZ
      vP3225mamsq2bduSJB999FGOHDmSd999N+12O+Pj4zl06FCOHTuW+fn5XLx4Me+8806OHTuW
      W2+9VQC4MY2Ojuaee+7J/v3709vbu7Gj7u3tzdDQUM6cOZOJiYm0Wq1s2bIlu3fvTqPRyM6d
      O9NoNNLtdrO2tpaenp60Wq3Mzc1t7JwvXLiQ4eHhjI+P5+zZs2k0GhuPu7i4mLm5udx5552f
      O7TesWNHXnvttUxOTmbv3r0ZHh7O1NTUxu333HNPWq1W/vznP//nVhJfSaPRyM9+9rM89dRT
      2blzZ5aWltLpdDaO3lZXV3Pu3LmMjo6m0+mk0+lkaWlpY/5f/vKXOXjw4Ma2tby8vDFvs9nM
      lStXsrKysjGt0Wik2WxubD/NZjMPP/xwnnzyyZw6dSqbNm3K0NBQDh48mN7e3o152u12FhYW
      Mjw8nKWlpfT29mbz5s1ZXFxMX19fkmT79u157LHH8sQTT2Tr1q2Zn5/P0tJSWq1WfvCDH+Tw
      4cPZu3dvNm/enL6+vrSefvrpp/9TKxq+rtXV1aysrPyf6c1mM1u3bk2SjIyM5O23387Kykom
      JyczODiYTqeTW265JcPDw/n73/+e5NM3R19fX3p6erJly5b89a9/zbZt29LT05Nms5mxsbGN
      ZY+Pj2d0dDQrKysZGhrKwMBAWq1WRkZG8uGHH+by5cu5+eabMzg4mIGBgQwODubDDz/MxMRE
      3n///czOzmZycjL9/f0ZGBjI3/72t8zPz2fXrl256aab/mPrj09fz2azmYWFhS+8vdVqZWxs
      LK1WK61WK51OJ6+88koOHjyYc+fO5fTp0xkdHc33vve9LCws5MSJE9m1a1cmJiayZcuWjI6O
      5vjx4/n2t7+dO++8M++//34++uijTExMZMeOHent7c1LL72UH/3oR9m2bVuGhobS19eXrVu3
      pr+/P41GIydOnMh7772Xhx56KHv27Mnx48ezvLycO+64I319fdm3b19+85vf5JZbbsl3vvOd
      bNq0KbfddlvGx8czNjaWHTt2bDyXz/4eHBzMzMxMpqam8tOf/jRjY2P5xz/+kR/+8IeZnJzM
      qVOn0ug6RYHrWLvd/tynrX+3TqeTN954I/v370+r1fp/LaPb7eb06dO5/fbbMzAw8G8eIf+q
      zy4F8cEHH3zteU+ePJk9e/akv7//GxjZtScAXNe+6QDw3+9fCcB/O/8DAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKcikIrmv/7GJw8FV9djG4xcXFaz2U644AABTlKyCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACK
      EgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgB
      AChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACK
      EgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgB
      AChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACK
      EgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgB
      AChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACK
      EgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgB
      AChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACK
      EgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoKj/ARNtQ+LoZ0EiAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='158' name='Total vs bpl' width='384'>
      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
      hWIAEBEp1P8BWZLS0+eKVAUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='158' name='Total vs bpl bos' width='384'>
      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
      S6FnB/heAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Unemployment Gender' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWWxcV4Ie4P9W3do37qRIcZFIUYvVttoeubvlbdy23N1ub8lkkJ4MAkyA
      TgMBAuQ1wLz0a5CHSR7mIQ8J8hBkQZaZSbudsd2W2rZsbZYs0zJNiavEnbXvVXc7eThFUpTl
      NiVVsSie/wMIimKp7qkSef57dk0IIUBERMpxNbsARETUHAwAIiJFMQCIiBSlN+Oitm3Dtm0A
      gMvlgq43pRhERErTmj0IbNs23G53M4tARKQkdgERESmqIX0vFy9eRCqVgq7reP755zE2NoaV
      lRWEw2G8+OKLjbgkERHdp4a0ANLpNH784x/j5ZdfhtfrxfLyMl577TVUq1VUq9VGXJKIiO5T
      QwKgpaUFH330Ef72b/8W1WoVPp8PmqahtbUVhUKhEZckIqL7VPcuICEETp48CbfbjStXriAe
      j2/c9WcyGYTD4XpfkoiIHkBDxgDOnDkDIQSKxSIef/xxdHV14Z133oHX64XP52vEJYmI6D41
      bBqoZVlwu93QNA1CCFiWBV3XoWnalsdxGigRUXNwHQARkaK4DoCISFEMACIiRTEAiIgUxQAg
      IlIUA4CISFEMACIiRTEAiIgUxQAgIlIUA4CISFEMACIiRTEAiIgUxQAgIlIUA4CISFEMACIi
      RTEAiIgUxQAgIlIUA4CISFEMACIiRTEAiIgUxQAgIlIUA4CISFEMACIiRTEAiIgUxQAgIlIU
      A4CISFEMACIiRTEAiIgUxQAgIlIUA4CISFEMACIiRTEAiIgUxQAgIlIUA4CISFEMACIiRTEA
      iIgUxQAgIlIUA4CISFEMACIiRTEAiIgUxQAgIlJUwwIgm83iiy++AADMzMzgk08+wfnz5xt1
      OSIiuk96I55UCIGPP/4YlmXhiSeewMTEBJ577jlomtaIyxER0QNoSAvg2rVrOHr0KHw+HwAg
      l8vhs88+w/LyMgDAcRyYpgnTNOE4TiOKQERE36HuAWCaJi5duoRkMomFhQWsrKzgT/7kT/DD
      H/4Q169fR6lUgqZp0HUduq7D5eIwBBFRM9S9C8jtduPP/uzPAABLS0tobW3FhQsXMDQ0hGq1
      Co/Hw64gIqJdQBNCiEY9eSqVQltbG1KpFBYWFjAwMICWlpYtj7FtG263u1FFICKib9HQANgO
      BgARUXOwA56ISFEMACIiRTEAiIgUxQAgIlIUA4CISFEMACIiRTEAiIgUxQAgIlIUA4CISFEM
      ACIiRTEAdgMhAMtudimISDENORCG7oMQwKXPgbkF4PGjwJERgLulEtEO4GZwzVapAv/j/wK2
      DbhcQE8n0F37aG8FfN5ml5CI9igGQLMJAZy7BNxeBLo6gFIZyOZkl5DuBlpbgO4OoKdLBkIw
      wBYCEdUFA2A3EAIwTcDjkV9XqkAyDaysAWsJ+WfTAtxuIBqWQdHTCXR1AqGAbDkQEd0nBsBO
      KZUBxwEsCyhXZQWuabLyT6aBjrZv/7eGCaQywGpcfqwl5N8BQCQMdLVvdhu1RNlCIKJtYQDs
      BEcAX3wFeD2ykl6NA53t8k5+eRX46ibw8nPbey4h5Ec6K59nJQ4kUkChKL/v89bCoAPo7gJa
      o5stCyKiO3AW0E5YWgH8PqBckd01iTQwuB+wHeD2EhAOAoYBeLcx4Ktp8qO9VX4cG5UDyIUi
      EE8Cy2vAWhJYWJYtDp8XaGutjSN0yj/7vGwlEBFbADsiXwByBXm3HwnLr3u7Zb++zwfMzAFP
      Pi5Doh6EAIol2TJYWQNWE0A6I1siHh2IReWgcneHbC0wEIiUxADYaY4jK+idfs1VQ7YQ1scR
      1geWNQ2IRWQgdHXIj0iIgUCkAAaAioSQg9HJjBxQXlmTgVCuAC4NCATuWI/QIVstOnsLifYa
      BgBJlgVkcpvjCPGknLkkhFx70NG2OdOoNSbXKLCVQPRIYwDQvQkBZPMyCNbXI2Tz8nvrA8s9
      nbVuo3bONCJ6BDEAaHuEkF1Eq4nNcYRMbnMLi7YWYF8X0NsDdLTKwW0i2tUYAPRghACqVSCe
      kq2D1bhcrGbUVjS3xrZuYRHws8uIaJdhAFD9GCYQTwBLa5szjWwbcLvk1NP1LSy6O7mnEdEu
      wACgxjFNuehtvcsokZLTUYHNPY26a+MILVHZpeTSgGiE4UC0AxgAtDOEkK2BTG7rFhalEgBN
      bpNhmIAG4Kcvyq4jImooBgA1j23LVdGrCWBuHlhckX/v8wJD/cDhYTm4zN1OiRqCAUC7Q9UA
      Pr8uu4AqVXlCmmXJTfMOHQAODPBwHKI6YwDQ7iOE3Bxv5jYwOSu7inQdOFBrFXS0sVVAVAcM
      ANo5lSrw9SRw/AgwfhM4dkhOGY0nZffP4H45ffROjiMHkm9Oy1aBacpuofVWgd/HAWOiB8QN
      XmjnzM3Lbh3bkhW77QAeyMp/eBCYnf9mALhccqVxVztw8gn5mMkZ4MJV4MqXwGCfbBV0dTAI
      iO4TA4B2hmHIrpxKVVb8Qb/8e9sGhofkltjf1Rb1+YAjI7LCT2WAG1MyEKbmZHCMDstuomCg
      sa+FaI9gFxDtjPWTzBZX5KKw6Tk531/X5bnGSyvAwUEgHLq/560awK0F4OaM7Epyu4GBXuDw
      iGwVuDlWQPRtGAC0N6wfgpPKADemN09ha62NF/T3cktrorswAGhvyhdk19DULJAvym6h4UFg
      9KBsgRARA4D2OMeRrYGJadn95Dhy19LRg7JVwG2sSWEMAFLDehfR1Jwcf8jm5Q6lw4PAoYNy
      LyLOIiLFMABIPbYtD7m5MQPcXpTh0NMpWwUD+3naGSmDAUBqK5XlOMHULSCTldtNDA/JgeP2
      1maXjqihGABEgBwbWI3LGUTzS4Bly32IjgzLsQKecEZ7EAOA6G7FEjB7G7g5W2sV+Db3IWpt
      kRvWEe0BDACibyOEbBXcnJErjm1bbklx6KDch8jLGUT0aGMAEH0XIeSK4+k5uTtpKgN4dLly
      +dAB2VXEQWN6BDUsANLpNGZnZ/Hkk09ibW0NY2NjOHToEAYHB7c8jgFAjxTHkXsa3ZyRm9uZ
      lhwsHj0oD7Hxc6yAHh0N2ShFCIFPPvkE8/PzAIBz587hmWeeweXLl+E4TiMuSbQzXC65x9Cz
      TwP/6OfAD5+UofDpZ8D/ehv4+CKwlpCtBqJdriGbo3z++ed47LHHMDExAcdxEAwGEQgE0NfX
      h2w2i1gsBtu2Nx7PFgA9kvx+4OghuUNpMi1nEM3WDrFpa5GtgoODbBXQrlX3ADAMA5cvX8YT
      TzyB+fl5rKysbNz1m6YJt9sNTdOg1zbmYouAHnmaJk8p62gD/ugJ2TV0Yxq4+Lk8s2CgV25V
      3d3Bk8xoV6l7AOi6jj//8z8HAKyurqKzsxOWZWFqagqrq6uIRCLQOGBGe5XPK6eLHjogB4sn
      Z4GZW8D0rc2dSYcHeZIZ7QoNnQWUyWTQ0tKCarWK6elpDAwMIBwOb3kMB4FpzzMMeZzljWl5
      ZoGub7YK9nUxCKhpOA2UaKcIAaSzcgbRzG2gUgFikc2xglCw2SUkxTAAiJrBMIDbS7JVsJaQ
      J5nt3yfDwDDkyWhdHc0uJe1xDACiZlpvFUzNyq2qK1X595oGvPkTedYxu4ioQRgARLuFbcv1
      BJOz8mu3CxgaAA4fBLo7GQRUdwwAot2kUpVjBAEfkMzIGUTVqpxBdGSEq42prhgARDtpfV8h
      jy7v6A1TTh1dv7s3ra0H0lQNua5gYkouNvN5gYMDwOERdg/RQ2MAEO2kfBFYXgGyBcDjBgTk
      4G9nuzyc5uynwOnnv7nTqBBysPjGtNyZ1LGBni655mBwvxxEJrpPDACinfbl17Lit23Zz+/3
      ywViY+Pyjv7w8LcfQLPegpickecVZHPybOPRg/I5opEdfSn0aGMAEO2kXB4oloFbC7LCXlyR
      ZwxomjyofnkVOH5ke8dR2jawvCa7hxaW5XP09cixgn1dbBXQd2IAEO0k0wLSGSASBmwHMA2g
      JSYHfwN++fnOMYHtyublVNKbM0C5ArRE5cE1hw482POREhgARHuJbW9uO7G6Brjc8vSywwfl
      wjIGAd2BAUC0F60vMLsxLaeSGobsVjpcm0rq8za7hLQLMACI9rpKVZ5TcGNa7lDq98m9h44M
      A7EoWwUKYwAQqWL9kPuJaeDWPOAIOVh8eETuTsrfQ+UwAIhUI4RsFUzOyEHjXEHuRHrogPyI
      hL/7OWhPYAAQqcyygaUVOZV0aRVwaUDfPuDoCNDdJdcp0J7FACAi2SrI5eXisskZ2UJoicnZ
      Q8NDnEq6RzEAiGgr25b7D309Jbef0HXgQL9cYNbRxiDYQxgARHRvjpCL1iam5P5DpikD4Mgw
      MNj/zf2K6JHDACCi71apyvUEE9NAJitXLQ8PyT2IYhG2Ch5RDAAi2j4hgJU4MDEJ3FqUX/d2
      y+6h/b0cNK631bg8Ke7QgYYcEcoAIKL7J4Tcc+jmjDzBLF+Q5xiPHgRGhuSfaXvWd3g1DKBQ
      AgpF+ZEvAvOLm2dG9HYDwSAQDsppu6GgXNTn8wIezwO1whgARPRwLEvuajoxJXcndWlAf58c
      K+juBFyKtwocR063NYzNiv3OSr5YBCqGfB+FkBW5rsuK3bTkiXDBgPy7alU+l23L53bVHuv1
      yHAIBTbDIRSU/y4UlAGhu7/xf8EAIKL6EELuSnpjWu5MWjWAthbZKhgekpXUXhwrWK9Cy5XN
      Cj1X2KzgSyU5hlI1tv67UO1uPhySi+/CQfk5GJRHgnq9QKUCrCZkkPp9svKvVuXzFUvyEKFi
      SW4xXizKz6WSfNydvB55xkQwAERCtXAIMgCIqAEsS84cujEFrCXlEZgHB+VhN+2tj14Q2DZQ
      rgLl8ta790Ktsi+WNu/KAXmnHfDJyjwSAsLh2udahR8Kyjt30wRSWbl9d6ksnyMSlnf/1SqQ
      yT3YLq4bAVELh1Kt3PmCDKpyBTAtBgARNZAjgGRKtgrm5mWXRmd7bSrpftk1sRtYluxrL1dk
      Jbmlq6bWL2/bsjsH2Ox2Cfi33r2HQ7KiDwbk3kou1x+uvNevtbQKDPTJmVaHDsqW02dfAL09
      QE+du9EcR74Ww2QAENEOKVeA6VuyVZDNy0pyeEiuNo6EG9cqEGKz0tsyyFrYrOTLFdlHb9cq
      eJdLtlpCd1Tsd1byAb8MgIetu2xbHgUaCMiuss+vA09+Tx4Z+uF5eZ3jhxs2qM4AIKKd5Thy
      sPjGlJxKqmlyhsvRQ/JIywe9212fRVMsbb2DzxdkF0ilIivWdV5PbbA0BETDm90z4dodfMDf
      +K6qeFJu0V0syX5+DUBnh1yBvRqXLaajh2T5GoABQETNIYTsn56cBibnZGUdCQGjw8DwoKy0
      Y1HZH74+VbJavfcsmnxRfs+pVWeaJv+d3ycr+PW790ho8y7e45GzaJo5HuEIGVzrq6rXy7Je
      LVt2Q1dcMwCIqPksC5hflgvMVhOyIrRteSceDsk7ZGN9qiQ2pz/6fPLueL2Sv/PPHo/sxnnU
      Bpx3EAOAiHaP9aMsPzwvP2sa0N2xdYA1HAaCftlFs1sGkR9RDAAi2n3WEsD1G8D+fXJwlBqC
      AUBEpCi92QUgIgUtrcoZMIP7gWxOztQ5fkT2+09My4HPkSH23zeY4pt0EFFTtLfKfv10Bphf
      kgufALkYyzTl6WRN7ZtQA1sAtGs4wgGgwcW7PjXYthz09fnkdhF3LgZzBGQC8GehkRgA1FRC
      CJiOjUSxiP/55TW4XBr+6fdPosUfaHbRqJFW1uQ+NX37ZKVfLMlFT7YjF4KFguz+2QEcBKaG
      Wf/RMmwb2UoZmUoZ2UoFmUoZuTs+F00DJcOAXXt8RzCEo13dGGnvwIHWdnjdbmisDIjqjgFA
      D6VkGigaBvLVKrKVMlLlEtLlzQo+WymjYllb/o3H5UbI60XE50PM70fMH4Bf9+DzpQVoGtAW
      CGI+m0HFsuDWNAy1tmOkvQMj7R3ojUahu/jzQlQPDAC6J8txULUsVCwT2UoF2Tvu3tf/nKtU
      ULUtWI4Dp/Zj5Nd1+HQdEa8PLYEAYv4AYj4/YoEAWvwBxPx+BDwe6C4X3Jpry5295dgANLg1
      DVXLwnwug8lEHJPJOOKFAizHQdjnw1BLGw51dGK4rQOtgQDcqh84QvSAGACKEULAFgKOcGp3
      7ZuV+53dNEXDQNkyUa3dvWsA3C4XPG63rNBrlfmWSt7vR8jrg1/X71kpf3prFpbj4Af9g7g4
      fwvd4QgOd3ahZBr4fGkRPxoYhEv75r8TQiBXrWA2ncLNRBwzqQQy5Qo0TXYXHWyTLYSDbR0I
      ejzsLiLaBiEEA2AvMiwLOaOK3D0q91ylgrxRRaFa3ehzXxf2ehHx+RGtVeYt/gBiAVm5R31+
      hH0+hLzeBy5XslTEZwvz6A5HkKmUcbx7HzpCISRLRVycv41XDh2Gvo27eUcIrBXymE4lMZmM
      YzaVQsUyobtc6IvGMNzWgdGOTvTHWqDzZ+uRdDuTxoezUxjt6MIP+gebXZw9I1epYC6Twq10
      GvPZNAPgUeIIB2XTQtk0ka9WNu7W7+6eKZsmHCE2plF7XC4EPB6EvL6Nyj3mD9Tu3v0bd/S6
      ywWXpjXkDloIgbViAVcXFzauO5NK4mejR+F2ufDR7DRODR7YVgDc/by242Ahl8XNxBqmkgks
      53MwbBt+XcdQaxsOtXdipL0DHaHwfT8/NZ4QAmXTRLJUxFI+h6VcFuNrq8hVK9AAxPwBhLxe
      +HUPfLqOkNez8eegx4OQxwefrsOnuxHy+uBxueFxy9aq160rO63YtG0kS0XMZzO4lUnjdiaF
      eLEIRwgEPR50hSMMgN1gIr6Kr1ZX8FRfP6I+H7LVCjLlb1bu+WoFVduGYdkQENAA6G43vC43
      Ij7Z5x6tVeYtte6ZqC+AoNcDr1uHx+VqWveIads4f3sOluPg5P5+XJq/jY5QCLrLjZZAAF+u
      LOFAazsOd3Y91HWEECgYBm5lUphKJjCVjCNZKgEAWvwBHGhrx2h7Jw60tSPi8ylbOTSL7Tgo
      mQbWCgUs5rJYzuewkMsgV6mgYllwaRoCHlnBJ0tFtAYCGGppQ8WyULUtFA0DFcuEaduwHQFb
      OLCFwJ3VmEvT5BiTywXd5YLXrcOv61tCJOjxIOjxwqu7EdS9CHq9G+NXIY8XLpcGt+aCu/Z5
      t3crOkKgZBpYzuVwK5PGrUwKS7kcikYVABDy+mTruL0dw20daA+G4Nd1BkCzlU0T/+ajD1A2
      zXt+36/rG10xLX4/oj75OeYPIOr3I+jxIujxcCD0WwghkCgVMZtKYrIWCCXThFvT0BOJYrit
      HaOdXRhqaYPexIDca9arlWylUqvos1jM5bBayCFTLm90P0Z9fuyPxdATjmJ/rAVd4TDaAkEA
      wFIui45QGIF77PhpOw4M20bFMmHZDgzHluNWpoGqbaNsGigZJqq2bDGXTAMVU4ZIqTa+Za0f
      73gPshXhhs/thk/X4dVrIeLxwqfr8Hs8GyHic+vwe3QEPV4EPB743Po9u0rr9bMlaq37RLGA
      25k0bmXSmM9mEC/KiRIaNHRHwhiItWKwpRX7Yy3f2vplADSZadv4959+hHixgKHWNvxRX39t
      tozsJvHpXKtXT44QWMplMZmMYyqZwO1MGoZtw+NyYbC1DaO12UU9kSi7i+6DYdtIlYpYzuew
      lMthKZ/FUi6HkmkAAHSXC+3BEHoiEfRFY4j4/PDrOkY7OpEpl1G1LPRGY9A0DelyCRXTQk8k
      0tBAthwbZdNE0TBQtS1UrfVwkLPfKqaFomlszIYr1R5n2g4qlgnDtjdmv92LX9fhdddaG95a
      UOh6rbXhQaAWJKE7vufzeOBzy/Dx6x4s5bK4vrqM0Y5OGLaD+Uwac5kU5rOZjZvGqM+HfZEY
      Blpkhd8fa4F/m9tk1z0AhBDI5XJYXFxER0cHurq6kE6nkc1moWkaBge3DuioHgAAUDCqmM9k
      cLCtnRX+DhJCoGJZd3QXJRAvFmDXppsebG3HaIfsLmoNBNldBPmelWr99cv53EY3zlohj6pl
      QQAIejxoCwTRG42hNxpDXzSGjlAIft2z8R4uZjNIlIqwHAfL+RyOdXXjQGs7qraFM9OTON69
      D/2xll3XIrMdZ8tMOtN2ULbMja6pqmWhZBoom7UQsSwUjWotROT3TNuBLRxYtgPLsbdseeTS
      5DRoTdPgdrlgWNaWyRpetxvtwRD6Yy0bFX5rIAjPA9ahDQmAL774Aq2trbh69SpefPFFnDt3
      DiMjI3C5XBgdHd3yeBUCwBECFdOET9chIH+IPG43XJq2sRWC182Kv9mEEEhXyrhVm246nUog
      V6nApWnoCIUw3NaJ0Y4ODLa2IaDv7emmQgg4QqBsmVjN57GYy2Ipn8VyLod0Rd6xuzQNft2D
      nkgE+6Mt6IlE0BuNodUf+M470Hy1gncnJ/BHfQO4lUkjWynj1dGjyFYrODM9Ca/bjdePPAbX
      HmyFmbYNy3Fg2jZMx4ZhWSjXgqJiWXeEiInxtVVkKmV0hyN4/chj6IlEEPb66vazV/daR9M0
      HDt2DAsLC9A0DYFAALlcDpZlYWBgAEDth6vW/9bkHqgdES8UMJdJIV+VAzJhrxfHu/ch7PNh
      tVDA//36S/zq6VNNLiVpmoa2QBBtgSC+37sfQgisFHKYSiYxmYjjytI8Pr09C93lQn+sBSO1
      2UX7Yy2PfHeREAKpcgmrhTyWcrL7ZqWQQ6pU2rhDbQsE0R2O4Hj3PvRGo+gOR9EWfLCW0Xw2
      g32RGJbzOXjdblQtCyuFPAAg4PHAcpw9uxmop9bFc6+xjbu9cGAENxJrONLZhVgD9sdqyBhA
      oVDA2NgY1tbWcPr0aVQqFRSLRXz88cf40z/9U+i6vhEAAKDv8W4Py3FwdmYSUZ8fpm2jZJr4
      Qf8AIj4/zs5MwnYcvDQ8yoHcXUy21BzMZ9OYSiQwmYxjJZ+D6TgI6B4Mt7djpL0TB9va0REM
      7er/y6plIVMuyzv6fA4L2SxWCjmUTBNCCHjdbrQGAtgXiaE3GkVvJIZ90SiCtVZPPe4+LceB
      YVkIeDwwHWdjoSFQ62aBgMet7/m9QAUAx3HuOf16fbC3kV2Pda95hRDIZrN46qmncO3aNayt
      rUEIgd7eXkQiEdi2Da/Xu9G0s2273kXYdZKlIobbOjARX8VIeydW8jms5PNIlUoIe324mYgj
      V62gtTb7gXYfTdPgdbsx3NaB4bYOvCIOo2BUMZdOb6w/GF9bBSCnm67vXXSgVU43bUZ3kSME
      qpaFeLFQG5yV3TiJYnFjANGn6+gMhXGsqwf7YzHsi0TREZQzbxpa8bhc0GszZbx3dQG79niX
      8J1W8jlMJuJwaxocCAgBnNjXh6jfj4/mppEul3F65PBDLcD8QxoyBnDt2jWk02lEo1E89dRT
      uH79OuLxOPr6+nD48OEtj1dhDKBsmlgt5NEVCsNwbJQMA93hCEqmiYjPh3y1iojP1+xi0kNw
      hECiWMR0Sk41nU4lUa5NN+2NxjYCYbBB001Frb9+MZvdGJxdKeSQLJVg1m6yArpH3tFHY/Ku
      PhJBWzDEiQdNZDkOPpyZQswfQLJchF/X8fT+QQQ8HpRNE2emb+LHw6Pb6i56EJwGStQAtuNg
      sTbddDIRx0IuC9O24XW7t6xO7g5H7ru7yHEcpCtlrBbym4upshlkKxUAssugJRBAdyhSm4kT
      3Ric3csD14+ibKUCy5GLJJ/q68dyLouAx4ueSATn5mZwonc/9jVwSjIDgKjB1rc6uJVJYzIZ
      x3QygXipCMdxEPH5MdzejkO11ckxnx/ZShmB2qKiimUiUy5vmXK5kpf99Y4Q8Ll1RP1+7I/G
      0BOJYn8shq5wBCGPd1ePQ5CULpcwl06hP9aCsmUhWynjUHsn0uUS0uUSbCEw3NbBFgDRXuEI
      gXS5tLE6eTqVQKFahUtzoSUQQKZcRsDjQWsggFSphKJpQIOcPdIVCm/Mr++NRtEeDCHk8fLO
      nh7IfQdAqVRGMFi/6UgMAFKdIwSWc1lMpZK4uji/MR1yqLUNA7EW7IvE0BOJoCsc5mE4VFf3
      HQD/9q//M/7Bqy9h5EB/XQrAACDatJLP4f/d/BrtwRBeO/IYVx9TQ91XACytrOHf/Yf/Asdx
      8C/+2T/GwcH9D930ZACQahwhd3LVaivBgc2Nwu7+mqiRtjVKdH1iCr959/f46//031EollAs
      lfDX//G/YmZuvtHlI9pTUqUiPp6bxrlbM3CEwP++/gVyVTl7x7Rt/LexqzAUWBtDu8O2JgAH
      A358fOEKCsUyhHAw0LcP//C102hva210+Yj2lLZgCAGPFxXTxNdrK4j5AxvbEl9ZlKeliT27
      CQLtNttqAQz192LkwCC8Hh0Bvw//8pf/BIdHhtASizS6fER7Stk0cbC1DblqBauFAjKVMpZy
      uY2Df5ZzOcQLhWYXkxTxnWMAQgh8+OlnCIcCiEYi+D9vv4d//a/+ed0KwDEAUkmmXMbNxBq6
      whEMtbYhUSwi4JGnXw20tGIln+PRlbRjvjMAHMdBIplBV2cbAKBaNeDz1W9fCgYAEVFzcCEY
      EZGi2M4kIlLUAwfAO++8g1QqVc+yEBHRDtp2AFSrVeRyuY2Pubk5GIbRyLIREVEDbXsj8KtX
      r+LDDz/c+No0Tfj9/oYUioiIGm/bAfD0008jlUrBcRz89Kc/hadB25MSEdHO2HYX0NmzZ5HP
      52HbNt57771GlomIiHbAtgNgYWEBJ06cwIkTJzA5OYlUKqXEeb5ERHvVttcBnDt3DufPn4em
      aTBNEx6PB7/61a8QjUYfqgBcB0BE1BzbDgAhBMbHx3HgwAHcuHEDkUgEw8PD3A6aiOgRte1B
      4LNnz+L69evI5/Po7e3F1NQU/vIv/xLBYLCR5SMiogbZ9hjA/Pw8fvGLX2Dfvn34yU9+giNH
      jiCfzzeybERE1EDbbgEEAgH81V/9FVKpFG7evIlUKoWf/OQnjSwbERE1EDeDIygOtO8AAA6N
      SURBVCJSFDeDIyJS1La7gIQQ0DQNn332GS5cuACXy4W/+Iu/4CAwEdEjatstgCtXruDSpUsY
      Hx/Hj370I3g8HiSTyUaWjYiIGui+1gFMTEzg5s2bcLlcOHbsGA4ePMh1AEREj6httwCmp6dx
      9uxZrK6uwuPxYHx8HJZlNbJsRETUQNseA7hw4QJOnz6NsbExDA0NoaWlBYZhcFdQIqJH1La7
      gMrlMs6cOYO2tjb88Ic/fOiun3XsAiIiag6uAyAiUhTXARARKYoBQESkKAYAEZGiGABERIpi
      ABARKYoBQESkKAYAEZGiGABERIpiABARKYoBQESkKAYAEZGiGABERIpiABARKaohAeA4DvL5
      PEzTBCBPE8vn83AcpxGXIyKiB7DtA2G2SwiBTz75BJqmYWlpCa+//jouXLgAACgWi3jttdfq
      fUkiInoAdW8BaJqG5557Dj/60Y8QDAZhmiYKhQJefPFF+P1+lMvlel+SiIgeQN1bAACQTqfx
      7rvvwuPxwOfzwev1AgAikQhKpRK8Xi9s2wYgA4MHwhAR7by6twCEEAgGg/jFL36B4eFhLC4u
      olwuQwiBRCKBaDQKt9sNr9cLr9cLl4vj0EREzdCQFsBHH30E27YhhMCxY8dQLpfx9ttvo7u7
      m4fIExHtEjwTmIhIUex/ISJSFAOAiEhRDAAiIkUxAIiIFMUAICJSFAOAiEhRDAAiIkUxAIiI
      FMUAICJSFAOAiEhRDAAiIkUxAIiIFMUAICJSFAOAiEhRDAAiIkUxAIiIFMUAICJSFAOAiEhR
      DAAiIkUxAIiIFMUAICJSFAOAiEhRDAAiIkUxAIiIFMUAICJSFAOAiEhRDAAiIkUxAIiIFMUA
      ICJSFAOAiEhRDAAiIkUxAIiIFMUAICJSFAOAiEhRDAAiIkUxAIiIFMUAICJSFAOAiEhRDAAi
      IkUxAIiIFMUAICJSFAOAiEhRDAAiIkUxAIiIFMUAICJSFAOAiEhRer2fUAiBzz//HMvLy7As
      Cz/72c9w5coV5HI5uN1uvPzyy/W+JBERPYC6BwAADA0N4fvf/z4uX76MRCKBdDqNn/3sZ9A0
      rRGXIyKiB1D3LiBN09Da2opr164hmUxi37590HUd7777Lt5//30IIWDbNgzDgGEYcByn3kUg
      IqJt0IQQop5PKITAhQsX4PF48NRTT0HTNDiOA03T8MEHH+AHP/gBIpHIxuNt24bb7a5nEYiI
      aBsa0gX01Vdfob+/H++//z5OnjyJc+fOIRgMIpPJIBQKNeKSRER0n+reArgXIQQMw4DX6/3G
      OABbAEREzbEjAfCHMACIiJqD6wCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhI
      UQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTF
      ACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwA
      IiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAi
      UhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBSl1/sJhRC4cuUKVldXYRgG
      fv7zn2N8fBzz8/Noa2vDM888U+9LEhHRA2hIC2BkZASvvvoqent7kUgkcOvWLbz22mvIZrMw
      DKMRlyQiovtU9wDQNA2xWAxXrlxBNptFV1cX/H4/NE1De3s78vk8bNuGYRgwDAOO49S7CERE
      tA0N6QL69NNPEQwGcfr0aQDYuOvP5XIIhUJwu91wu90AANu2610EIiLahoZ0Ad24cQNra2t4
      //33kc1m0dLSgr//+7+HZVnw+/2NuCQREd0nTQghGn0RIQQMw4DX64WmaVu+Z9v2RmuAiIh2
      zo4EwB/CACAiag6uAyAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTF
      ACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwA
      IiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAi
      UhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJFMQCIiBTFACAiUhQDgIhIUQwAIiJF
      MQCIiBTVkAAQQmBqagqVSgUAMD8/j4sXL+Ly5cuNuBwRET2AhgTA5cuXceHCBRQKBQDAl19+
      idHRUYyOjjbickRE9AD0RjzpyZMnoWnaxtfZbBbj4+MYGBhALBZrxCWJiOg+NSQA7qz8AeCt
      t96CaZp477330NHRgUAg0IjLEhHRfah7F5AQAqlUCrlcDslkEpVKBWNjY6hWq3AcB263u96X
      JCKiB6AJIUQ9n1AIgenpaZRKJWiahoGBAZTLZczPz2NwcBBdXV1bHm/bNkOBiKgJ6h4A94sB
      QETUHE0JANu2Ydv2Tl+WiIju0PQWgGEY8Hq9zSxC0wkhYJom3wchYFkWPB5Ps4vSVJZlweVy
      weVSe50m64bG1w1q/4QRESms6QGg+l3OOr4P0t1TiFXE90Di74TUyPeh6V1ARETUHIxYIiJF
      7ZoAsG0bhmFgvUFimiYsy9r4vuM4uLOxYpomTNPc8XI+jLtfo2VZW16DEAKO42x8b/1jrzXS
      vuv/+s73QQixsYhwL1kf3Ft/3fd6nbZtb7xHd79ne8Xdr9txHFSr1Y3XeffX678Te8131Q13
      f313ffigGrIVxP26ffs2vvjiCwDA0NAQuru7ce7cOQgh8PLLLyOTyeC9997DG2+8ge7ubty4
      cQMzMzPw+/14/vnnH4l1BCsrK7h48SJ0XUd3dzdGRkbwwQcfQNM0PP/883C5XHj//fdx6NAh
      PPnkk7h48SIqlQoWFxfx0ksvoa+vr9kvoS4WFhZw9epVuFwu9Pf3o6+vDx999BGEEHjppZdg
      WRbee+89PP7443jsscdw5swZaJqGTCaD1157bc/MCrl06RIymQyy2SxeeeUVTE1NIZFIwLIs
      vPrqqxgfH8fHH3+MX/7ylxvbqPh8Puzfvx/f+973ml38unAcB2+//Tb8fj8qlQpef/11/Pa3
      v4XH40FnZycOHTqEM2fOwO/3IxAI4Hvf+x5+//vfQwiBF198EW1tbc1+CXVxZ93Q09OD4eHh
      LXVDPB7H7OwsqtUqTpw4ASEEzpw5gzfffBOdnZ0PdW33r3/961/X52U8uEAggGPHjqGnpwcT
      ExNYXl7GK6+8gt7eXoyPj6O3txfhcBjBYBDhcBgXL17E888/jwMHDjwyUwa9Xi8ee+wx9PX1
      4euvv0Y8HscLL7yA4eFhXL16FX19fdi/fz/S6TT6+vowMDCAoaEhzMzM4Omnn94zA4N+v3/L
      //XKygpefvll9Pf34/r16+jp6UFvby8KhQJ6enrw5Zdf4sc//jFWV1fR2dkJv9/f7JdQF11d
      XRgdHUW1WoWmaZiensbPf/5zJBKJjZ9zy7IwMDCA6elp9Pf34+TJk7h48SIOHz7c7OLXzfDw
      MEZGRvDVV1+hvb0dpmnihRdewNWrV3HkyBEcPXoUQ0NDGBsbQy6Xw6lTp3DkyBFcunQJBw8e
      bHbx6+LOumF8fBxra2v44z/+44264cSJEzhy5Aii0SgWFhbQ19eHQCCASCSCcDj8UNfeFV1A
      Ho8H09PTOHPmDJ599lnYtg2fz4dQKIRqtYr29vaNCtC2bSwtLeHatWv4m7/5G+RyuSaXfns8
      Hg9u376Nd999F8888wxM00QgEIDP54Nt24jFYt8Is8nJSYyMjOyZyh+Q78Ps7Cx+97vf4dln
      n4VlWfD7/QgGgzAMA62trVtadNFoFO+88w6SySRCoVATS15fuq7j008/RaFQwMDAwEbLJhaL
      oVAooKOjY+Ox/f39uHLlCj788EOsra01q8h1p2kaDMPAb37zGzzxxBMoFouIRqPQNA26rsPl
      ciGZTOLv/u7v8Oyzz8IwDASDQQQCARiG0ezi183ddcP678R63eDxeDA2NoZr167h5MmTW+rD
      h7UruoCWl5cxMTGBN998Ey6XC16vF4VCAYVC4Ru/9G63Gz09PTh16hQmJiYQj8cRjUabVPLt
      S6fT+Oyzz/DGG29A13UEAgHkcjlomnbPbg0hBMbHx/HGG280obSNs7q6iuvXr+Ott96Cy+WC
      z+dDoVBAqVT6xi6xjuOgUCjgrbfewtjYGBYXFzE0NNScgtfZ+fPnEYvFcPz4cQDY6P9NJpPo
      7e3d8thIJIK33noLhmEgn883o7gNIYTAb3/7W5w+fRqtra1IJBKYmJjYGB+pVCo4e/Ys3nzz
      Tfh8vo3fGV3XEQwGm138ukmn07hy5cq31g0TExPIZrN49dVX634zuCu6gG7cuIFcLofbt2+j
      Uqng6NGj+OCDD7C4uIhTp07h+vXrmJmZQTweRzgcRiwWw4ULF5BOp/Hkk08+EmMAU1NTyGQy
      WFhYQD6fx/Hjx/HBBx9gbm4Op06dwvz8PMbGxhCPxzdej9frRU9PT5NLXl83b95ENpvF/Pw8
      yuUyjh07ht/97ndYWFjAqVOnMDs7i6+++grxeBxerxeWZWFiYgLpdBonTpx4JP6vt+Pq1auo
      VCqYnp5GJBJBIBDAhQsX4Ha7cfjwYZw/fx5LS0tIJBKIxWI4d+4cJicn8dRTTyESiTS7+HVR
      Lpfx5ZdfIpvNYmZmBsePH8fk5CTGx8cxMjICy7KwsLCA1dVVxONxPP744zh79ixmZ2fx3HPP
      7ZnxoKmpKaTT6W+tG27evIlyuYzZ2VlomoaZmRnMzc0hHo8/dDfQrl0HsF6sb0s8x3Ggadoj
      3T3yXa9RFSr8X38XIQSEEN/6OlV4D4DN9+HbFj+p8juzU69z1wYAERE11q4YBCYiop33/wFP
      e0x5Mn1qVAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Work Experience' width='384'>
      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
      7fu1u3krnSLa1UGit4embb0kNm8iuWUTTVs3Y2fC34PrA//6HZlvhtZ6BQaA5zP+2JNc+fvP
      s/7f/yiV0TFyB4+y/b/8KtMvHqQ0eJlC/wCb/sNPc/gTP8PU/hdY98kfof1d78Bubbn2REoR
      7Zy7y6kRicx5rGwr/EO9+tgyF+wP7WpYGbEohm0vyPeYL25uhst/+0/YmVa63v8I2vPwZgvX
      3ZlPVCvx8PHVjzsTk3iFIkG5QlAuz3lOZVkYERsViWA3p8OKvL2NSGcH0c5qpd7ZTqQ9Q6Sr
      A7ulGTMew4jFMGPRN/X1B46D9n0C10N71X+uh1+9IwsqDm5uJgyPySl0EOBMTIZ9vNnJavhM
      QqBxJrLoq+Hj+5QuD4etGAVGNIb2w+d+pas/LyMaxYhGMJuSWKkUkfY27JY0VjqN3dJMJNOG
      lW7CSqeIZNqwW1uw0imsdBOGbYe/45a15H/nFlPgOHizRUqXBin0nQv/nTtPoe8cpaEreNX/
      awAjFsVKpUhsWk9y62aSW3tJ9vaQ3NpLdFUndjr1pob1igsAACc7ydCn/4GeX/gpLn3qM8TW
      rqbrfQ8TeB4X/vivaLlrD1Y6xbNve++r7hxfj9WcAq6lrVXtArjKTMTnhMTVwZja41is+hwh
      ZVlE2lqvfYNq/zLXJfrV/ub8iVNc+uv/j0RvDxt/+pMo49U/48r4xOv2DXozeYJy5TU/75fK
      ePn8a37+akX1mt9D62p3ywylC5fC8ndk8AtF/GLpu3+NYYQVeUcmvEPvyIR36x3ttQo92tmO
      3dZSq7SMSONWRjPHTnL+j/+Kljtuo+sDj+CXSnj5WdzJabz8LN5MnsrYBN7MDN5MHncqhzs5
      hTuTDx9PTofdANXNG1+PlU5hJsNBRaupCbu9DaspidWcJtrehtVSbXWk00Ta22rBYbe2hl1Z
      gWbobz9LZWSMDT/1b4lcf4O1DOkgoHRxiMK58xTPDjB75hyFvrMULw5RuTI8p5WnbJtEzwaS
      mzeGFf2WTSS39hJfv5ZoVyeGvTTm36zIALj4qc/Q8e53Ujp/iZEvfZ2u9787rLzGJyj0naPj
      4XeS3nMrLz36Q+QOHmH1xz5I6747cSanrz1J4IeV3XWc8eyclXbu1PScP6SrXQC1pyhXCJxr
      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
    </thumbnail>
    <thumbnail height='384' name='work exp bos' width='384'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
